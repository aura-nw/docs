{
    "openapi": "3.0.0",
    "info": {
        "title": "Horoscope API Documentation",
        "version": "1.0.0",
        "description": "## Indexer for multiple Cosmos Network \n\n### How to use\n\nSelect server Horoscope if use Horoscope API\n\nSelect server LCD if use Legacy API"
    },
    "servers": [
        {
            "url": "https://horoscope.aura.network/api",
            "description": "Horoscope "
        },
        {
            "url": "https://lcd.osmosis.zone",
            "description": "Osmosis Mainnet LCD"
        },
        {
            "url": "https://lcd.euphoria.aura.network",
            "description": "Aura Euphoria LCD"
        },
        {
            "url": "https://cosmos-lcd.quickapi.com",
            "description": "Cosmos Mainnet LCD"
        }
    ],
    "paths": {
        "/v1/account-info": {
            "get": {
                "tags": [
                    "Account Info"
                ],
                "summary": "Get information of an address",
                "description": "Get information of an address",
                "parameters": [
                    {
                        "in": "query",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Address of account"
                    },
                    {
                        "in": "query",
                        "name": "chainId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "account_auth": {
                                                    "type": "object",
                                                    "properties": {
                                                        "result": {
                                                            "type": "object",
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "example": "cosmos-sdk/BaseAccount"
                                                                },
                                                                "value": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "address": {
                                                                            "type": "string",
                                                                            "example": "aura123123123123123123"
                                                                        },
                                                                        "public_key": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "example": "tendermint/PubKeySecp256k1"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                                                }
                                                                            }
                                                                        },
                                                                        "account_number": {
                                                                            "type": "string",
                                                                            "example": "10"
                                                                        },
                                                                        "sequence": {
                                                                            "type": "string",
                                                                            "example": "10"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "height": {
                                                            "type": "string",
                                                            "example": "100"
                                                        }
                                                    }
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "aura123123123123123123123"
                                                },
                                                "account_balances": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string",
                                                                "example": "aura"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "example": "10000000"
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_delegations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "delegations": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "delegator_address": {
                                                                        "type": "string",
                                                                        "example": "aura123123123123123123"
                                                                    },
                                                                    "validator_address": {
                                                                        "type": "string",
                                                                        "example": "auravaloper123123123123"
                                                                    },
                                                                    "shares": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    }
                                                                }
                                                            },
                                                            "balance": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "1000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_redelegations": {
                                                    "type": "object",
                                                    "properties": {
                                                        "redelegation": {
                                                            "type": "object",
                                                            "properties": {
                                                                "delegator_address": {
                                                                    "type": "string",
                                                                    "example": "aura123123123123123123123"
                                                                },
                                                                "validator_src_address": {
                                                                    "type": "string",
                                                                    "example": "auravaloper123123123123123"
                                                                },
                                                                "validator_dst_address": {
                                                                    "type": "string",
                                                                    "example": "auravaloper123123123123123"
                                                                }
                                                            }
                                                        },
                                                        "entries": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "redelegation_entry": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "creation_height": {
                                                                                "type": "string",
                                                                                "example": "100000"
                                                                            },
                                                                            "completion_time": {
                                                                                "type": "string",
                                                                                "example": "2022-09-13T09:23:48.195Z"
                                                                            },
                                                                            "initial_balance": {
                                                                                "type": "string",
                                                                                "example": "1000000"
                                                                            },
                                                                            "shares_dst": {
                                                                                "type": "string",
                                                                                "example": "1000000"
                                                                            }
                                                                        }
                                                                    },
                                                                    "balance": {
                                                                        "type": "string",
                                                                        "example": "1000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_spendable_balances": {
                                                    "type": "object",
                                                    "properties": {
                                                        "redelegation": {
                                                            "type": "object",
                                                            "properties": {
                                                                "denom": {
                                                                    "type": "string",
                                                                    "example": "uaura"
                                                                },
                                                                "amount": {
                                                                    "type": "string",
                                                                    "example": "10000000000"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_unbonding": {
                                                    "type": "object",
                                                    "properties": {
                                                        "delegator_address": {
                                                            "type": "string",
                                                            "example": "aura123123123123"
                                                        },
                                                        "validator_address": {
                                                            "type": "string",
                                                            "example": "auravaloper123123123"
                                                        },
                                                        "entries": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "creation_height": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    },
                                                                    "completion_time": {
                                                                        "type": "string",
                                                                        "example": "2022-09-13T09:23:12.018Z"
                                                                    },
                                                                    "initial_balance": {
                                                                        "type": "string",
                                                                        "example": "100000000"
                                                                    },
                                                                    "balance": {
                                                                        "type": "string",
                                                                        "example": "100000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_delegate_rewards": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rewards": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "total": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/account-info/delegations": {
            "get": {
                "tags": [
                    "Account Info"
                ],
                "summary": "Get delegation information of an address",
                "description": "Get delegation information of an address",
                "parameters": [
                    {
                        "in": "query",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Address of account"
                    },
                    {
                        "in": "query",
                        "name": "chainId",
                        "required": true,
                        "schema": {
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ],
                            "type": "string"
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string",
                                                    "example": "aura123123123123123123123"
                                                },
                                                "account_balances": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string",
                                                                "example": "aura"
                                                            },
                                                            "amount": {
                                                                "type": "string",
                                                                "example": "10000000"
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_delegations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "delegations": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "delegator_address": {
                                                                        "type": "string",
                                                                        "example": "aura123123123123123123"
                                                                    },
                                                                    "validator_address": {
                                                                        "type": "string",
                                                                        "example": "auravaloper123123123123"
                                                                    },
                                                                    "shares": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    }
                                                                }
                                                            },
                                                            "balance": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "1000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "account_delegate_rewards": {
                                                    "type": "object",
                                                    "properties": {
                                                        "rewards": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "total": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/account-info/stake": {
            "get": {
                "tags": [
                    "Account Info"
                ],
                "summary": "Get account stake info",
                "description": "Get account stake info",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Address need to query"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Delegations",
                                "Unbondings",
                                "Redelegations",
                                "Vestings"
                            ]
                        },
                        "description": "Type of stake need to query"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "Limit number of data returned"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Number of data to skip"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "account_unbonding": {
                                                    "type": "object",
                                                    "properties": {
                                                        "delegator_address": {
                                                            "type": "string",
                                                            "example": "aura123123123123"
                                                        },
                                                        "validator_address": {
                                                            "type": "string",
                                                            "example": "auravaloper123123123"
                                                        },
                                                        "entries": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "creation_height": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    },
                                                                    "completion_time": {
                                                                        "type": "string",
                                                                        "example": "2022-09-13T09:23:12.018Z"
                                                                    },
                                                                    "initial_balance": {
                                                                        "type": "string",
                                                                        "example": "100000000"
                                                                    },
                                                                    "balance": {
                                                                        "type": "string",
                                                                        "example": "100000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.account-info"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/account-statistics": {
            "get": {
                "tags": [
                    "AuraScan Statistics"
                ],
                "summary": "Get top accounts data",
                "description": "Get top accounts data",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "field",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "TXS_SENT",
                                "TXS_RECEIVED",
                                "AMOUNT_SENT",
                                "AMOUNT_RECEIVED"
                            ]
                        },
                        "description": "Account's field to query"
                    },
                    {
                        "in": "query",
                        "name": "dayRange",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "enum": [
                                "1",
                                "3",
                                "7"
                            ]
                        },
                        "description": "Day limit to query"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "description": "Number of records returned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top Statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "address": {
                                                        "type": "string",
                                                        "example": "aura1s9z065kv897was45gel6wxjcddu73fmh4qwmcu"
                                                    },
                                                    "per_day": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "total_sent_tx": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "number",
                                                                            "example": 100
                                                                        },
                                                                        "percentage": {
                                                                            "type": "number",
                                                                            "example": 30.45
                                                                        }
                                                                    }
                                                                },
                                                                "total_received_tx": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "number",
                                                                            "example": 100
                                                                        },
                                                                        "percentage": {
                                                                            "type": "number",
                                                                            "example": 30.45
                                                                        }
                                                                    }
                                                                },
                                                                "total_sent_amount": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "number",
                                                                            "example": 100
                                                                        },
                                                                        "percentage": {
                                                                            "type": "number",
                                                                            "example": 30.45
                                                                        }
                                                                    }
                                                                },
                                                                "total_received_amount": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "number",
                                                                            "example": 100
                                                                        },
                                                                        "percentage": {
                                                                            "type": "number",
                                                                            "example": 30.45
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "one_day": {
                                                        "type": "object",
                                                        "properties": {
                                                            "total_sent_tx": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_received_tx": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_sent_amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_received_amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "three_days": {
                                                        "type": "object",
                                                        "properties": {
                                                            "total_sent_tx": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_received_tx": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_sent_amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_received_amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "seven_days": {
                                                        "type": "object",
                                                        "properties": {
                                                            "total_sent_tx": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_received_tx": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_sent_amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            },
                                                            "total_received_amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "number",
                                                                        "example": 100
                                                                    },
                                                                    "percentage": {
                                                                        "type": "number",
                                                                        "example": 30.45
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/account-unbonds": {
            "get": {
                "tags": [
                    "Account Info"
                ],
                "summary": "Get account undelegations",
                "description": "Get account undelegations",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Address need to query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "account_unbonding": {
                                                    "type": "object",
                                                    "properties": {
                                                        "delegator_address": {
                                                            "type": "string",
                                                            "example": "aura123123123123"
                                                        },
                                                        "validator_address": {
                                                            "type": "string",
                                                            "example": "auravaloper123123123"
                                                        },
                                                        "entries": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "creation_height": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    },
                                                                    "completion_time": {
                                                                        "type": "string",
                                                                        "example": "2022-09-13T09:23:12.018Z"
                                                                    },
                                                                    "initial_balance": {
                                                                        "type": "string",
                                                                        "example": "100000000"
                                                                    },
                                                                    "balance": {
                                                                        "type": "string",
                                                                        "example": "100000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.account-info"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/asset/index": {
            "post": {
                "tags": [
                    "Asset"
                ],
                "summary": "Register asset CW20, CW721, CW4973 with the code id and contract type",
                "description": "Register asset CW20, CW721, CW4973 with the code id and contract type",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "codeId": {
                                        "type": "number",
                                        "description": "Code id of stored contract"
                                    },
                                    "contractType": {
                                        "type": "string",
                                        "enum": [
                                            "CW721",
                                            "CW20",
                                            "CW4973"
                                        ],
                                        "description": "Type of contract want to register"
                                    },
                                    "chainId": {
                                        "type": "string",
                                        "example": "aura_6321-3",
                                        "description": "Chain Id of network"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Register asset result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "registed": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/asset/getByOwner": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Get asset CW20, CW721, CW4973 by owner",
                "description": "Get asset CW20, CW721, CW4973 by owner",
                "parameters": [
                    {
                        "in": "query",
                        "name": "owner",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Owner address need to query"
                    },
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": false,
                        "schema": {
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ],
                            "type": "string"
                        },
                        "description": "Chain Id of network need to query(if null it will return asset on all chainid)"
                    },
                    {
                        "in": "query",
                        "name": "contractType",
                        "required": true,
                        "schema": {
                            "enum": [
                                "CW20",
                                "CW721",
                                "CW4973"
                            ],
                            "type": "string",
                            "default": "CW20"
                        },
                        "description": "Type asset need to query"
                    },
                    {
                        "in": "query",
                        "name": "tokenName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token name need to query"
                    },
                    {
                        "in": "query",
                        "name": "tokenId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token id need to query"
                    },
                    {
                        "in": "query",
                        "name": "contractAddress",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Contract address need to query"
                    },
                    {
                        "in": "query",
                        "name": "isBurned",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "get token which is burned"
                    },
                    {
                        "in": "query",
                        "name": "countTotal",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "description": "count total record"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "assets": {
                                                    "type": "object",
                                                    "properties": {
                                                        "CW721": {
                                                            "type": "object",
                                                            "properties": {
                                                                "asset": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "asset_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "data": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "access": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "approvals": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "owner": {
                                                                                                        "type": "string",
                                                                                                        "example": "aura123"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "info": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "token_uri": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "extension": {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "image": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "image_data": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "external_url": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "description": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "attributes": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "background_color": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "animation_url": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "youtube_url": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "custom_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "chain_id": {
                                                                                        "type": "string",
                                                                                        "example": "aura"
                                                                                    },
                                                                                    "chain_name": {
                                                                                        "type": "string",
                                                                                        "example": "Aura network"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "history": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "asset_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "code_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "contract_address": {
                                                                                "type": "string"
                                                                            },
                                                                            "token_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "owner": {
                                                                                "type": "string"
                                                                            },
                                                                            "is_burned": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "createdAt": {
                                                                                "type": "string",
                                                                                "example": "2022-08-17T06:20:19.342Z"
                                                                            },
                                                                            "updatedAt": {
                                                                                "type": "string",
                                                                                "example": "2022-08-17T06:20:19.342Z"
                                                                            },
                                                                            "metadata": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "image": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "image_data": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_url": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "attributes": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "background_color": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "animation_url": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "youtube_url": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "image": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "link_s3": {
                                                                                        "type": "string",
                                                                                        "example": "https://s3-horoscope/a"
                                                                                    },
                                                                                    "content_type": {
                                                                                        "type": "string",
                                                                                        "example": "image/jpg"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "animation": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "link_s3": {
                                                                                        "type": "string",
                                                                                        "example": "https://s3-horoscope/b"
                                                                                    },
                                                                                    "content_type": {
                                                                                        "type": "string",
                                                                                        "example": "video/mp4"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "count": {
                                                                    "type": "number",
                                                                    "example": 0
                                                                }
                                                            }
                                                        },
                                                        "CW20": {
                                                            "type": "object",
                                                            "properties": {
                                                                "asset": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "asset_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "data": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string",
                                                                                                "example": "CW20-Aura"
                                                                                            },
                                                                                            "symbol": {
                                                                                                "type": "string",
                                                                                                "example": "SM"
                                                                                            },
                                                                                            "decimal": {
                                                                                                "type": "number",
                                                                                                "example": 6
                                                                                            },
                                                                                            "total_supply": {
                                                                                                "type": "string",
                                                                                                "example": "10000000000"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "custom_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "chain_id": {
                                                                                        "type": "string",
                                                                                        "example": "aura"
                                                                                    },
                                                                                    "chain_name": {
                                                                                        "type": "string",
                                                                                        "example": "Aura network"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "history": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "asset_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "contract_address": {
                                                                                "type": "string"
                                                                            },
                                                                            "code_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "owner": {
                                                                                "type": "string"
                                                                            },
                                                                            "balance": {
                                                                                "type": "string"
                                                                            },
                                                                            "percent_hold": {
                                                                                "type": "number",
                                                                                "example": 10
                                                                            },
                                                                            "createdAt": {
                                                                                "type": "string",
                                                                                "example": "2022-08-17T06:20:19.342Z"
                                                                            },
                                                                            "updatedAt": {
                                                                                "type": "string",
                                                                                "example": "2022-08-17T06:20:19.342Z"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "count": {
                                                                    "type": "number",
                                                                    "example": 0
                                                                }
                                                            }
                                                        },
                                                        "CW4973": {
                                                            "type": "object",
                                                            "properties": {
                                                                "asset": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "asset_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "data": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "access": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "approvals": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "owner": {
                                                                                                        "type": "string",
                                                                                                        "example": "aura123"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "info": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "token_uri": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "extension": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "custom_info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "chain_id": {
                                                                                        "type": "string",
                                                                                        "example": "aura"
                                                                                    },
                                                                                    "chain_name": {
                                                                                        "type": "string",
                                                                                        "example": "Aura network"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "history": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "asset_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "code_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "contract_address": {
                                                                                "type": "string"
                                                                            },
                                                                            "token_id": {
                                                                                "type": "string"
                                                                            },
                                                                            "owner": {
                                                                                "type": "string"
                                                                            },
                                                                            "is_burned": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "createdAt": {
                                                                                "type": "string",
                                                                                "example": "2022-08-17T06:20:19.342Z"
                                                                            },
                                                                            "updatedAt": {
                                                                                "type": "string",
                                                                                "example": "2022-08-17T06:20:19.342Z"
                                                                            },
                                                                            "metadata": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "image": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "image_data": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "external_url": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "attributes": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "background_color": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "animation_url": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "youtube_url": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "image": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "link_s3": {
                                                                                        "type": "string",
                                                                                        "example": "https://s3-horoscope/a"
                                                                                    },
                                                                                    "content_type": {
                                                                                        "type": "string",
                                                                                        "example": "image/jpg"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "animation": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "link_s3": {
                                                                                        "type": "string",
                                                                                        "example": "https://s3-horoscope/b"
                                                                                    },
                                                                                    "content_type": {
                                                                                        "type": "string",
                                                                                        "example": "video/mp4"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "count": {
                                                                    "type": "number",
                                                                    "example": 0
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'owner' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "owner"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.asset"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/asset/getByContractType": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Get asset CW20, CW721, CW4973 by contract type",
                "description": "Get asset CW20, CW721, CW4973 by contract type",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contractType",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CW721",
                                "CW20",
                                "CW4973"
                            ]
                        },
                        "description": "Contract type need to query"
                    },
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "countTotal",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        },
                        "description": "count total record"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "assets": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "asset_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "data": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "access": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "approvals": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "owner": {
                                                                                        "type": "string",
                                                                                        "example": "aura123"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "info": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "token_uri": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "extension": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "image": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "image_data": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "external_url": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "description": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "attributes": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "background_color": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "animation_url": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "youtube_url": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "custom_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "chain_id": {
                                                                        "type": "string",
                                                                        "example": "aura"
                                                                    },
                                                                    "chain_name": {
                                                                        "type": "string",
                                                                        "example": "Aura network"
                                                                    }
                                                                }
                                                            },
                                                            "history": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "asset_id": {
                                                                "type": "string"
                                                            },
                                                            "code_id": {
                                                                "type": "string"
                                                            },
                                                            "contract_address": {
                                                                "type": "string"
                                                            },
                                                            "token_id": {
                                                                "type": "string"
                                                            },
                                                            "owner": {
                                                                "type": "string"
                                                            },
                                                            "is_burned": {
                                                                "type": "boolean"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "example": "2022-08-17T06:20:19.342Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "example": "2022-08-17T06:20:19.342Z"
                                                            },
                                                            "metadata": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "image": {
                                                                        "type": "string"
                                                                    },
                                                                    "image_data": {
                                                                        "type": "string"
                                                                    },
                                                                    "external_url": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "attributes": {
                                                                        "type": "string"
                                                                    },
                                                                    "background_color": {
                                                                        "type": "string"
                                                                    },
                                                                    "animation_url": {
                                                                        "type": "string"
                                                                    },
                                                                    "youtube_url": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "image": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "link_s3": {
                                                                        "type": "string",
                                                                        "example": "https://s3-horoscope/a"
                                                                    },
                                                                    "content_type": {
                                                                        "type": "string",
                                                                        "example": "image/jpg"
                                                                    }
                                                                }
                                                            },
                                                            "animation": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "link_s3": {
                                                                        "type": "string",
                                                                        "example": "https://s3-horoscope/b"
                                                                    },
                                                                    "content_type": {
                                                                        "type": "string",
                                                                        "example": "video/mp4"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "count": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "nextKey": {
                                                    "type": "string",
                                                    "example": "xxxxxxxxxxxx"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.account-info"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/asset/holder": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Get holder by asset CW20, CW721, CW4973 (contractType and contractAddress)",
                "description": "Get holder by asset CW20, CW721, CW4973 (contractType and contractAddress)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "contractType",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CW721",
                                "CW20",
                                "CW4973"
                            ]
                        },
                        "description": "Contract type need to query"
                    },
                    {
                        "in": "query",
                        "name": "contractAddress",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "asset/contract address need to query"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "countTotal",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "description": "count total record"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    },
                    {
                        "in": "query",
                        "name": "reverse",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "description": "reverse is true if you want to get the by percent hold cw20, default is false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list holder",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "resultAsset": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "quantity": {
                                                                "type": "number",
                                                                "example": 5
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "example": "2022-09-06T08:09:27.473Z"
                                                            },
                                                            "chain_id": {
                                                                "type": "string",
                                                                "example": "aura"
                                                            },
                                                            "owner": {
                                                                "type": "string"
                                                            },
                                                            "contract_address": {
                                                                "type": "string"
                                                            },
                                                            "balance": {
                                                                "type": "string"
                                                            },
                                                            "percent_hold": {
                                                                "type": "number",
                                                                "example": 100
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/block": {
            "get": {
                "tags": [
                    "Block"
                ],
                "summary": "Get latest block",
                "description": "Get latest block",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "blockHeight",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Block height of transaction"
                    },
                    {
                        "in": "query",
                        "name": "blockHash",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Block hash"
                    },
                    {
                        "in": "query",
                        "name": "operatorAddress",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "operator address who proposed this block"
                    },
                    {
                        "in": "query",
                        "name": "consensusHexAddress",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "consensus hex address who proposed this block"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "countTotal",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "count total record"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    },
                    {
                        "in": "query",
                        "name": "reverse",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false",
                            "type": "string"
                        },
                        "description": "reverse is true if you want to get the oldest record first, default is false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "blocks": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "block_id": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "parts": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "total": {
                                                                                "type": "number",
                                                                                "example": 1
                                                                            },
                                                                            "hash": {
                                                                                "type": "string",
                                                                                "example": "7D045310732FBDB9DB3C31CE644E831BA450B89C6FC46E298B1589AE6BC61FCE"
                                                                            }
                                                                        }
                                                                    },
                                                                    "hash": {
                                                                        "type": "string",
                                                                        "example": "0FC0669C5CC9F8C7A891F6BCE43334D5391BA36F1E178D0C10C2E77BAA5CFB9F"
                                                                    }
                                                                }
                                                            },
                                                            "block": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "header": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "version": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "block": {
                                                                                        "type": "number",
                                                                                        "example": 11
                                                                                    }
                                                                                }
                                                                            },
                                                                            "last_block_id": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "parts": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "total": {
                                                                                                "type": "number",
                                                                                                "example": 1
                                                                                            },
                                                                                            "hash": {
                                                                                                "type": "string",
                                                                                                "example": "7D045310732FBDB9DB3C31CE644E831BA450B89C6FC46E298B1589AE6BC61FCE"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "hash": {
                                                                                        "type": "string",
                                                                                        "example": "0FC0669C5CC9F8C7A891F6BCE43334D5391BA36F1E178D0C10C2E77BAA5CFB9F"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "chain_id": {
                                                                                "type": "string",
                                                                                "example": "aura"
                                                                            },
                                                                            "height": {
                                                                                "type": "number",
                                                                                "example": 123
                                                                            },
                                                                            "time": {
                                                                                "type": "string",
                                                                                "example": "2022-09-06T03:05:37.931Z"
                                                                            },
                                                                            "last_commit_hash": {
                                                                                "type": "string",
                                                                                "example": "406AA52905BBAD518B7E39EDEA4108F3569779EA5BCDCEB5D44BED7BC296F2E0"
                                                                            },
                                                                            "data_hash": {
                                                                                "type": "string",
                                                                                "example": "5BA80BD845CB59539CD027253AC8F39DE8983C0713D7E22DA8867B9D08981837"
                                                                            },
                                                                            "validators_hash": {
                                                                                "type": "string",
                                                                                "example": "EB5CDC9D3D506F56E9E10C49FCCF3098755B8699D67F35BF3748A5572EEA033A"
                                                                            },
                                                                            "next_validators_hash": {
                                                                                "type": "string",
                                                                                "example": "EB5CDC9D3D506F56E9E10C49FCCF3098755B8699D67F35BF3748A5572EEA033A"
                                                                            },
                                                                            "consensus_hash": {
                                                                                "type": "string",
                                                                                "example": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F"
                                                                            },
                                                                            "app_hash": {
                                                                                "type": "string",
                                                                                "example": "5C97FF89AA5464245766A3BAD7C21B658D8AE405E71304B93F499DB960738633"
                                                                            },
                                                                            "last_results_hash": {
                                                                                "type": "string",
                                                                                "example": "21DB2576AE5F49F6FDE57AC1F1A6081134A63534956C536DCE6A25BD72917C75"
                                                                            },
                                                                            "evidence_hash": {
                                                                                "type": "string",
                                                                                "example": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855"
                                                                            },
                                                                            "proposer_address": {
                                                                                "type": "string",
                                                                                "example": "8690272AC41B780D3F009C9F50C36461C967B0C1"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "data": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "txs": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string",
                                                                            "example": "Cr4CCpwBCjcvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkEmEKK2F1cmExZ3lwdDJ3N3hnNXQ5eXI3Nmh4NnplbXdkNHh2NzJqY2trMDNyNnQSMmF1cmF2YWxvcGVyMWQzbjB2NWYyM3NxemtobGNuZXdoa3NhajhsM3g3amV5dTkzOGd4CpwBCjcvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkEmEKK2F1cmExZ3lwdDJ3N3hnNXQ5eXI3Nmh4NnplbXdkNHh2NzJqY2trMDNyNnQSMmF1cmF2YWxvcGVyMWVkdzRsd2N6M2VzbmxnemN3NjByYThtMzhrM3p5Z3oyeHRsMnFoEmkKUgpGCh8vY29zbW9zLmNyeXB0by5zZWNwMjU2azEuUHViS2V5EiMKIQOpI9dkWS6LMKVUiDKO+l6Cj42RgpHPB6zsDR5g+T9EoBIECgIIARjc/g0SEwoNCgZ1dGF1cmESAzIwMBDAmgwaQCbAXZBszJbxJBkFDQ34+gO1S0eSG8uHMa//hZ4RNjYnIhHVZfhQtdsAP+tVumfrCKifITaDFaZIiEORBlgmZSk="
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "evidence": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "evidence": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "custom_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "chain_id": {
                                                                        "type": "string",
                                                                        "example": "aura"
                                                                    },
                                                                    "chain_name": {
                                                                        "type": "string",
                                                                        "example": "Aura network"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "number"
                                        },
                                        "nextKey": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/codeid/{chainId}/{codeId}/checkStatus": {
            "get": {
                "tags": [
                    "CodeId"
                ],
                "summary": "Check status asset by code_id after register",
                "description": "Check status asset by code_id after register",
                "parameters": [
                    {
                        "in": "path",
                        "name": "chainId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network"
                    },
                    {
                        "in": "path",
                        "name": "codeId",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "description": "Code Id of stored contract need to query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CodeId information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "REJECTED"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/daily-tx-statistics": {
            "get": {
                "tags": [
                    "AuraScan Statistics"
                ],
                "summary": "Get daily blockchain data",
                "description": "Get daily blockchain data",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "timezone",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                -11,
                                -10,
                                -9,
                                -8,
                                -7,
                                -6,
                                -5,
                                -4,
                                -3,
                                -2,
                                -1,
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": true,
                        "schema": {
                            "type": "number"
                        },
                        "description": "Number of records returned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Daily Blockchain Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "daily_txs": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "daily_active_addresses": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "unique_addresses": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "example": "2022-10-05T00:00:00.000+00:00"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/network/status": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get status network (inflation, pool, community pool, supply)",
                "description": "Get status network (inflation, pool, community pool, supply)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Network information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "inflation": {
                                                    "type": "object",
                                                    "properties": {
                                                        "inflation": {
                                                            "type": "string",
                                                            "example": "0.255222222222522525"
                                                        }
                                                    }
                                                },
                                                "pool": {
                                                    "type": "object",
                                                    "properties": {
                                                        "bonded_tokens": {
                                                            "type": "string",
                                                            "example": "1000000000"
                                                        },
                                                        "not_bonded_tokens": {
                                                            "type": "string",
                                                            "example": "1000000000"
                                                        }
                                                    }
                                                },
                                                "communityPool": {
                                                    "type": "object",
                                                    "properties": {
                                                        "pool": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    },
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "supply": {
                                                    "type": "object",
                                                    "properties": {
                                                        "supply": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "1000000"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.network.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/param": {
            "get": {
                "tags": [
                    "Param"
                ],
                "summary": "Get param in each module Cosmos SDK",
                "description": "Get param in each module Cosmos SDK",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "module",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "bank",
                                "gov",
                                "distribution",
                                "staking",
                                "slashing",
                                "ibc-transfer",
                                "mint"
                            ]
                        },
                        "description": "module need to query"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module's param",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "properties": {
                                                        "module": {
                                                            "type": "string",
                                                            "example": "bank"
                                                        },
                                                        "params": {
                                                            "type": "object",
                                                            "properties": {
                                                                "send_enabled": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "default_send_enabled": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.params"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/proposal": {
            "get": {
                "tags": [
                    "Proposal"
                ],
                "summary": "Get latest proposal",
                "description": "Get latest proposal",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "proposalId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "proposal Id"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "description": "key for next page"
                    },
                    {
                        "in": "query",
                        "name": "reverse",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true",
                                "false"
                            ],
                            "type": "string",
                            "default": "false"
                        },
                        "description": "reverse is true if you want to get the oldest record first, default is false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List proposal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "proposals": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "content": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "@type": {
                                                                        "type": "string",
                                                                        "example": "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal"
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "proposal create validator"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "New proposal to create validator"
                                                                    },
                                                                    "changes": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "tally": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "yes": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "abstain": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "no": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "no_with_veto": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    }
                                                                }
                                                            },
                                                            "final_tally_result": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "yes": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "abstain": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "no": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "no_with_veto": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    }
                                                                }
                                                            },
                                                            "custom_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "chain_id": {
                                                                        "type": "string",
                                                                        "example": "aura"
                                                                    },
                                                                    "chain_name": {
                                                                        "type": "string",
                                                                        "example": "Aura network"
                                                                    }
                                                                }
                                                            },
                                                            "proposal_id": {
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "PROPOSAL_STATUS_REJECTED"
                                                            },
                                                            "submit_time": {
                                                                "type": "string",
                                                                "example": "2022-09-07T02:38:44.357Z"
                                                            },
                                                            "deposit_end_time": {
                                                                "type": "string",
                                                                "example": "2022-09-07T02:38:44.357Z"
                                                            },
                                                            "total_deposit": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "denom": {
                                                                            "type": "string",
                                                                            "example": "uaura"
                                                                        },
                                                                        "amount": {
                                                                            "type": "string",
                                                                            "example": "10000"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "voting_start_time": {
                                                                "type": "string",
                                                                "example": "2022-09-07T02:38:44.357Z"
                                                            },
                                                            "voting_end_time": {
                                                                "type": "string",
                                                                "example": "2022-09-07T02:38:44.357Z"
                                                            },
                                                            "deposit": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "amount": {
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.block.chain"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/transaction": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get latest transaction or get with condition",
                "description": "Get latest transaction or get with condition",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "blockHeight",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Block height of transaction"
                    },
                    {
                        "in": "query",
                        "name": "txHash",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Transaction hash"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Address in transaction with native coin"
                    },
                    {
                        "in": "query",
                        "name": "addressInContract",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Address in transaction with token from smart contract"
                    },
                    {
                        "in": "query",
                        "name": "sequenceIBC",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Sequence IBC in IBC transaction"
                    },
                    {
                        "in": "query",
                        "name": "searchType",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "transfer",
                                "proposal_deposit",
                                "proposal_vote",
                                "delegate",
                                "redelegate",
                                "instantiate",
                                "execute",
                                "wasm"
                            ]
                        },
                        "description": "Search type event"
                    },
                    {
                        "in": "query",
                        "name": "searchKey",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sender",
                                "recipient",
                                "proposal_id",
                                "validator",
                                "destination_validator",
                                "_contract_address",
                                "token_id"
                            ]
                        },
                        "description": "Search key event"
                    },
                    {
                        "in": "query",
                        "name": "searchValue",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search value event"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search query with format A.B=C,D.E=F"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "countTotal",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "description": "count total record"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    },
                    {
                        "in": "query",
                        "name": "reverse",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "description": "reverse is true if you want to get the oldest record first, default is false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "transaction": {
                                                    "type": "object",
                                                    "properties": {
                                                        "tx": {
                                                            "type": "object",
                                                            "properties": {
                                                                "body": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "messages": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "@type": {
                                                                                        "type": "string",
                                                                                        "example": "/cosmos.staking.v1beta1.MsgDelegate"
                                                                                    },
                                                                                    "delegator_address": {
                                                                                        "type": "string",
                                                                                        "example": "aura123123123123"
                                                                                    },
                                                                                    "validator_address": {
                                                                                        "type": "string",
                                                                                        "example": "aura123123123123"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "extension_options": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "non_critical_extension_options": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "memo": {
                                                                            "type": "string",
                                                                            "example": "This is Aura Tx"
                                                                        },
                                                                        "timeout_height": {
                                                                            "type": "string",
                                                                            "example": "0"
                                                                        }
                                                                    }
                                                                },
                                                                "auth_info": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "fee": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "amount": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "denom": {
                                                                                                "type": "string",
                                                                                                "example": "uaura"
                                                                                            },
                                                                                            "amount": {
                                                                                                "type": "string",
                                                                                                "example": "1000000"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "gas_limit": {
                                                                                    "type": "string",
                                                                                    "example": "100000"
                                                                                },
                                                                                "payer": {
                                                                                    "type": "string",
                                                                                    "example": ""
                                                                                },
                                                                                "granter": {
                                                                                    "type": "string",
                                                                                    "example": ""
                                                                                }
                                                                            }
                                                                        },
                                                                        "signer_infos": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "mode_info": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "single": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "mode": {
                                                                                                        "type": "string",
                                                                                                        "example": "SIGN_MODE_DIRECT"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "public_key": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "@type": {
                                                                                                "type": "string",
                                                                                                "example": "/cosmos.crypto.secp256k1.PubKey"
                                                                                            },
                                                                                            "key": {
                                                                                                "type": "string",
                                                                                                "example": "xxxxxxxxxxxxxxxxxxxx"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "sequence": {
                                                                                        "type": "string",
                                                                                        "example": "1000000"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "signatures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "example": "xxxxxxxxxxxxxxx"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "tx_response": {
                                                            "type": "object",
                                                            "properties": {
                                                                "height": {
                                                                    "type": "number",
                                                                    "example": 10000
                                                                },
                                                                "txhash": {
                                                                    "type": "string",
                                                                    "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                                },
                                                                "codespace": {
                                                                    "type": "string",
                                                                    "example": ""
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "example": "0"
                                                                },
                                                                "data": {
                                                                    "type": "string",
                                                                    "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                                },
                                                                "raw_log": {
                                                                    "type": "string",
                                                                    "example": "[{\\\"events\\\":[{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"xxxxx\\\"}]"
                                                                },
                                                                "logs": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "msg_index": {
                                                                                "type": "number",
                                                                                "example": 0
                                                                            },
                                                                            "log": {
                                                                                "type": "string",
                                                                                "example": ""
                                                                            },
                                                                            "events": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "example": "coin_received"
                                                                                        },
                                                                                        "attributes": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string",
                                                                                                        "example": "receiver"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string",
                                                                                                        "example": "aura123123123123123"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "info": {
                                                                    "type": "string"
                                                                },
                                                                "gas_wanted": {
                                                                    "type": "string",
                                                                    "example": "200000"
                                                                },
                                                                "gas_used": {
                                                                    "type": "string",
                                                                    "example": "150000"
                                                                },
                                                                "tx": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "@type": {
                                                                            "type": "string",
                                                                            "example": "/cosmos.tx.v1beta1.Tx"
                                                                        },
                                                                        "body": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "messages": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "@type": {
                                                                                                "type": "string",
                                                                                                "example": "/cosmos.staking.v1beta1.MsgDelegate"
                                                                                            },
                                                                                            "delegator_address": {
                                                                                                "type": "string",
                                                                                                "example": "aura123123123123123"
                                                                                            },
                                                                                            "validator_address": {
                                                                                                "type": "string",
                                                                                                "example": "aura123123123123123123"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "memo": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeout_height": {
                                                                                    "type": "string",
                                                                                    "example": "0"
                                                                                },
                                                                                "extension_options": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "non_critical_extension_options": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "auth_info": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "fee": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "denom": {
                                                                                                        "type": "string",
                                                                                                        "example": "uaura"
                                                                                                    },
                                                                                                    "amount": {
                                                                                                        "type": "string",
                                                                                                        "example": "1000000"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "gas_limit": {
                                                                                            "type": "string",
                                                                                            "example": "100000"
                                                                                        },
                                                                                        "payer": {
                                                                                            "type": "string",
                                                                                            "example": ""
                                                                                        },
                                                                                        "granter": {
                                                                                            "type": "string",
                                                                                            "example": ""
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "signer_infos": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "mode_info": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "single": {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "example": "SIGN_MODE_DIRECT"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "public_key": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "@type": {
                                                                                                        "type": "string",
                                                                                                        "example": "/cosmos.crypto.secp256k1.PubKey"
                                                                                                    },
                                                                                                    "key": {
                                                                                                        "type": "string",
                                                                                                        "example": "xxxxxxxxxxxxxxxxxxxx"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "sequence": {
                                                                                                "type": "string",
                                                                                                "example": "1000000"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "signatures": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string",
                                                                                "example": "xxxxxxxxxxxxxxx"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "timestamp": {
                                                                    "type": "string",
                                                                    "example": "2022-09-13T03:17:45.000Z"
                                                                },
                                                                "events": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "example": "coin_received"
                                                                            },
                                                                            "attributes": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string",
                                                                                            "example": "c3BlbmRlcg=="
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string",
                                                                                            "example": "xxxxxxxxxxxxxxxxxxxxxx"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "count": {
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "nextKey": {
                                                    "type": "string",
                                                    "example": "abc"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.transaction"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/transaction/power-event": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction power event of validator",
                "description": "Get transaction power event of validator",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Validator address (valoper)"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "countTotal",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "description": "count total record"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "transaction": {
                                                    "type": "object",
                                                    "properties": {
                                                        "tx": {
                                                            "type": "object",
                                                            "properties": {
                                                                "body": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "messages": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "@type": {
                                                                                        "type": "string",
                                                                                        "example": "/cosmos.staking.v1beta1.MsgDelegate"
                                                                                    },
                                                                                    "delegator_address": {
                                                                                        "type": "string",
                                                                                        "example": "aura123123123123"
                                                                                    },
                                                                                    "validator_address": {
                                                                                        "type": "string",
                                                                                        "example": "aura123123123123"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "extension_options": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "non_critical_extension_options": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "memo": {
                                                                            "type": "string",
                                                                            "example": "This is Aura Tx"
                                                                        },
                                                                        "timeout_height": {
                                                                            "type": "string",
                                                                            "example": "0"
                                                                        }
                                                                    }
                                                                },
                                                                "auth_info": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "fee": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "amount": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "denom": {
                                                                                                "type": "string",
                                                                                                "example": "uaura"
                                                                                            },
                                                                                            "amount": {
                                                                                                "type": "string",
                                                                                                "example": "1000000"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "gas_limit": {
                                                                                    "type": "string",
                                                                                    "example": "100000"
                                                                                },
                                                                                "payer": {
                                                                                    "type": "string",
                                                                                    "example": ""
                                                                                },
                                                                                "granter": {
                                                                                    "type": "string",
                                                                                    "example": ""
                                                                                }
                                                                            }
                                                                        },
                                                                        "signer_infos": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "mode_info": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "single": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "mode": {
                                                                                                        "type": "string",
                                                                                                        "example": "SIGN_MODE_DIRECT"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "public_key": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "@type": {
                                                                                                "type": "string",
                                                                                                "example": "/cosmos.crypto.secp256k1.PubKey"
                                                                                            },
                                                                                            "key": {
                                                                                                "type": "string",
                                                                                                "example": "xxxxxxxxxxxxxxxxxxxx"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "sequence": {
                                                                                        "type": "string",
                                                                                        "example": "1000000"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "signatures": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "example": "xxxxxxxxxxxxxxx"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "tx_response": {
                                                            "type": "object",
                                                            "properties": {
                                                                "height": {
                                                                    "type": "number",
                                                                    "example": 10000
                                                                },
                                                                "txhash": {
                                                                    "type": "string",
                                                                    "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                                },
                                                                "codespace": {
                                                                    "type": "string",
                                                                    "example": ""
                                                                },
                                                                "code": {
                                                                    "type": "string",
                                                                    "example": "0"
                                                                },
                                                                "data": {
                                                                    "type": "string",
                                                                    "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                                                },
                                                                "raw_log": {
                                                                    "type": "string",
                                                                    "example": "[{\\\"events\\\":[{\\\"type\\\":\\\"coin_received\\\",\\\"attributes\\\":[{\\\"key\\\":\\\"receiver\\\",\\\"value\\\":\\\"xxxxx\\\"}]"
                                                                },
                                                                "logs": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "msg_index": {
                                                                                "type": "number",
                                                                                "example": 0
                                                                            },
                                                                            "log": {
                                                                                "type": "string",
                                                                                "example": ""
                                                                            },
                                                                            "events": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "example": "coin_received"
                                                                                        },
                                                                                        "attributes": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string",
                                                                                                        "example": "receiver"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string",
                                                                                                        "example": "aura123123123123123"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "info": {
                                                                    "type": "string"
                                                                },
                                                                "gas_wanted": {
                                                                    "type": "string",
                                                                    "example": "200000"
                                                                },
                                                                "gas_used": {
                                                                    "type": "string",
                                                                    "example": "150000"
                                                                },
                                                                "tx": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "@type": {
                                                                            "type": "string",
                                                                            "example": "/cosmos.tx.v1beta1.Tx"
                                                                        },
                                                                        "body": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "messages": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "@type": {
                                                                                                "type": "string",
                                                                                                "example": "/cosmos.staking.v1beta1.MsgDelegate"
                                                                                            },
                                                                                            "delegator_address": {
                                                                                                "type": "string",
                                                                                                "example": "aura123123123123123"
                                                                                            },
                                                                                            "validator_address": {
                                                                                                "type": "string",
                                                                                                "example": "aura123123123123123123"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "memo": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timeout_height": {
                                                                                    "type": "string",
                                                                                    "example": "0"
                                                                                },
                                                                                "extension_options": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "non_critical_extension_options": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "auth_info": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "fee": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "amount": {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "denom": {
                                                                                                        "type": "string",
                                                                                                        "example": "uaura"
                                                                                                    },
                                                                                                    "amount": {
                                                                                                        "type": "string",
                                                                                                        "example": "1000000"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "gas_limit": {
                                                                                            "type": "string",
                                                                                            "example": "100000"
                                                                                        },
                                                                                        "payer": {
                                                                                            "type": "string",
                                                                                            "example": ""
                                                                                        },
                                                                                        "granter": {
                                                                                            "type": "string",
                                                                                            "example": ""
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "signer_infos": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "mode_info": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "single": {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "mode": {
                                                                                                                "type": "string",
                                                                                                                "example": "SIGN_MODE_DIRECT"
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "public_key": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "@type": {
                                                                                                        "type": "string",
                                                                                                        "example": "/cosmos.crypto.secp256k1.PubKey"
                                                                                                    },
                                                                                                    "key": {
                                                                                                        "type": "string",
                                                                                                        "example": "xxxxxxxxxxxxxxxxxxxx"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "sequence": {
                                                                                                "type": "string",
                                                                                                "example": "1000000"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "signatures": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string",
                                                                                "example": "xxxxxxxxxxxxxxx"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "timestamp": {
                                                                    "type": "string",
                                                                    "example": "2022-09-13T03:17:45.000Z"
                                                                },
                                                                "events": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "example": "coin_received"
                                                                            },
                                                                            "attributes": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string",
                                                                                            "example": "c3BlbmRlcg=="
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string",
                                                                                            "example": "xxxxxxxxxxxxxxxxxxxxxx"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "count": {
                                                    "type": "number",
                                                    "example": 10
                                                },
                                                "nextKey": {
                                                    "type": "string",
                                                    "example": "abc"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.transaction"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/validator": {
            "get": {
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator information in a network",
                "description": "Get validator information in a network",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query",
                        "example": "aura_6321-3"
                    },
                    {
                        "in": "query",
                        "name": "operatorAddress",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "operator address"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BOND_STATUS_UNSPECIFIED",
                                "BOND_STATUS_UNBONDED",
                                "BOND_STATUS_UNBONDING",
                                "BOND_STATUS_BONDED"
                            ]
                        },
                        "description": "status"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List validator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "validators": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "consensus_pubkey": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "@type": {
                                                                        "type": "string",
                                                                        "example": "/cosmos.crypto.ed25519.PubKey"
                                                                    },
                                                                    "key": {
                                                                        "type": "string",
                                                                        "example": "xxxxxxxxxxxxxxxxxxxxxxxx"
                                                                    }
                                                                }
                                                            },
                                                            "description": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "moniker": {
                                                                        "type": "string",
                                                                        "example": "validator one"
                                                                    },
                                                                    "identity": {
                                                                        "type": "string",
                                                                        "example": "validator one, earth"
                                                                    },
                                                                    "website": {
                                                                        "type": "string",
                                                                        "example": "validatorone.aura"
                                                                    },
                                                                    "security_contact": {
                                                                        "type": "string",
                                                                        "example": "validate@one.aura"
                                                                    },
                                                                    "details": {
                                                                        "type": "string",
                                                                        "example": "validator one details"
                                                                    }
                                                                }
                                                            },
                                                            "commission": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "commission_rates": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "rate": {
                                                                                "type": "string",
                                                                                "example": "0.00050000000"
                                                                            },
                                                                            "max_rate": {
                                                                                "type": "string",
                                                                                "example": "0.20000000000"
                                                                            },
                                                                            "max_change_rate": {
                                                                                "type": "string",
                                                                                "example": "0.05000000000"
                                                                            }
                                                                        }
                                                                    },
                                                                    "update_time": {
                                                                        "type": "string",
                                                                        "example": "2022-07-13T02:00:00Z"
                                                                    }
                                                                }
                                                            },
                                                            "val_signing_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "address": {
                                                                        "type": "string",
                                                                        "example": "aura123123123123123123"
                                                                    },
                                                                    "start_height": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    },
                                                                    "index_offset": {
                                                                        "type": "string",
                                                                        "example": "100000"
                                                                    },
                                                                    "jailed_until": {
                                                                        "type": "string",
                                                                        "example": "2022-07-13T02:00:00Z"
                                                                    },
                                                                    "tombstoned": {
                                                                        "type": "boolean",
                                                                        "example": false
                                                                    },
                                                                    "missed_blocks_counter": {
                                                                        "type": "string",
                                                                        "example": "0"
                                                                    }
                                                                }
                                                            },
                                                            "self_delegation_balance": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "denom": {
                                                                        "type": "string",
                                                                        "example": "uaura"
                                                                    },
                                                                    "amount": {
                                                                        "type": "string",
                                                                        "example": "10000000000"
                                                                    }
                                                                }
                                                            },
                                                            "custom_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "chain_id": {
                                                                        "type": "string",
                                                                        "example": "aura"
                                                                    },
                                                                    "chain_name": {
                                                                        "type": "string",
                                                                        "example": "Aura network"
                                                                    }
                                                                }
                                                            },
                                                            "operator_address": {
                                                                "type": "string",
                                                                "example": "auravaloper123123123123"
                                                            },
                                                            "jailed": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "BOND_STATUS_BONDED"
                                                            },
                                                            "delegator_shares": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "unbonding_height": {
                                                                "type": "string",
                                                                "example": "0"
                                                            },
                                                            "unbonding_time": {
                                                                "type": "string",
                                                                "example": "1970-01-01T00:00:00Z"
                                                            },
                                                            "min_self_delegation": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "consensus_hex_address": {
                                                                "type": "string",
                                                                "example": "CCCCCCCCCCCCCCCCCCC"
                                                            },
                                                            "uptime": {
                                                                "type": "number",
                                                                "example": 100
                                                            },
                                                            "account_address": {
                                                                "type": "string",
                                                                "example": "aura123123123123123123"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1.validator"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/votes": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Get votes",
                "description": "Get votes",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query"
                    },
                    {
                        "in": "query",
                        "name": "proposalid",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "default": 1
                        },
                        "description": "Proposal Id"
                    },
                    {
                        "in": "query",
                        "name": "answer",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "VOTE_OPTION_YES",
                                "VOTE_OPTION_NO",
                                "VOTE_OPTION_NO_WITH_VETO",
                                "VOTE_OPTION_ABSTAIN"
                            ]
                        },
                        "description": "Vote option want to query"
                    },
                    {
                        "in": "query",
                        "name": "pageLimit",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 10
                        },
                        "description": "number record return in a page"
                    },
                    {
                        "in": "query",
                        "name": "pageOffset",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "default": 0
                        },
                        "description": "Page number, start at 0"
                    },
                    {
                        "in": "query",
                        "name": "nextKey",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key for next page"
                    },
                    {
                        "in": "query",
                        "name": "reverse",
                        "required": false,
                        "schema": {
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false",
                            "type": "string"
                        },
                        "description": "reverse is true if you want to get the oldest record first, default is false"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "votes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "voter_address": {
                                                                "type": "string",
                                                                "example": "aura1hctj3tpmucmuv02umf9252enjedkce7mml69k8"
                                                            },
                                                            "proposal_id": {
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "answer": {
                                                                "type": "string",
                                                                "example": "Yes"
                                                            },
                                                            "txhash": {
                                                                "type": "string",
                                                                "example": "698185B1800A077B30A61ADBC42958CFCCFE5C3DA0D32E0AF314C0098684CCC6"
                                                            },
                                                            "timestamp": {
                                                                "type": "string",
                                                                "example": "2021-05-20T09:00:00.000Z"
                                                            },
                                                            "custom_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "chain_id": {
                                                                        "type": "string",
                                                                        "example": "aura_6321-3"
                                                                    },
                                                                    "chain_name": {
                                                                        "type": "string",
                                                                        "example": "Aura Testnet"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "nextKey": {
                                                    "type": "string",
                                                    "example": "63218f7c8c9c740a4dcefaf2"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/votes/validators": {
            "get": {
                "tags": [
                    "Vote"
                ],
                "summary": "Get validator votes",
                "description": "Get validator votes",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chainid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "aura_6321-3",
                                "osmosis-1",
                                "cosmoshub-4"
                            ]
                        },
                        "description": "Chain Id of network need to query"
                    },
                    {
                        "in": "query",
                        "name": "proposalid",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "default": 1
                        },
                        "description": "Proposal Id"
                    },
                    {
                        "in": "query",
                        "name": "answer",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "VOTE_OPTION_YES",
                                "VOTE_OPTION_NO",
                                "VOTE_OPTION_NO_WITH_VETO",
                                "VOTE_OPTION_ABSTAIN",
                                "DID_NOT_VOTE"
                            ]
                        },
                        "description": "Vote option want to query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validator Vote result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successful"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "votes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "voter_address": {
                                                                "type": "string",
                                                                "example": "aura1hctj3tpmucmuv02umf9252enjedkce7mml69k8"
                                                            },
                                                            "proposal_id": {
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "answer": {
                                                                "type": "string",
                                                                "example": "Yes"
                                                            },
                                                            "txhash": {
                                                                "type": "string",
                                                                "example": "698185B1800A077B30A61ADBC42958CFCCFE5C3DA0D32E0AF314C0098684CCC6"
                                                            },
                                                            "timestamp": {
                                                                "type": "string",
                                                                "example": "2021-05-20T09:00:00.000Z"
                                                            },
                                                            "custom_info": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "chain_id": {
                                                                        "type": "string",
                                                                        "example": "aura_6321-3"
                                                                    },
                                                                    "chain_name": {
                                                                        "type": "string",
                                                                        "example": "Aura Testnet"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "nextKey": {
                                                    "type": "string",
                                                    "example": "63218f7c8c9c740a4dcefaf2"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "ValidationError"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Parameters validation error!"
                                        },
                                        "code": {
                                            "type": "number",
                                            "example": 422
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "required"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The 'chainid' field is required."
                                                    },
                                                    "field": {
                                                        "type": "string",
                                                        "example": "chainid"
                                                    },
                                                    "nodeID": {
                                                        "type": "string",
                                                        "example": "node1"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "v1"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/auth/v1beta1/accounts": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Accounts returns all the existing accounts",
                "description": "Since: cosmos-sdk 0.43",
                "operationId": "CosmosAuthV1Beta1Accounts",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accounts": {
                                            "title": "accounts are the existing accounts",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryAccountsResponse is the response type for the Query/Accounts RPC method.\n\nSince: cosmos-sdk 0.43"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/auth/v1beta1/accounts/{address}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Account returns account details based on address.",
                "operationId": "CosmosAuthV1Beta1Account",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address defines the address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "account": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        }
                                    },
                                    "description": "QueryAccountResponse is the response type for the Query/Account RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/auth/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries all parameters.",
                "operationId": "CosmosAuthV1Beta1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "max_memo_characters": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "tx_sig_limit": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "tx_size_cost_per_byte": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "sig_verify_cost_ed25519": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "sig_verify_cost_secp256k1": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/authz/v1beta1/grants": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Returns list of `Authorization`, granted to the grantee by the granter.",
                "operationId": "CosmosAuthzV1Beta1Grants",
                "parameters": [
                    {
                        "name": "granter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "grantee",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "msg_type_url",
                        "in": "query",
                        "description": "Optional, msg_type_url, when set, will query only grants matching given msg type.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "description": "authorizations is a list of grants granted for grantee by granter.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "authorization": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "expiration": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "description": "Grant gives permissions to execute\nthe provide method with expiration time."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines an pagination for the response."
                                        }
                                    },
                                    "description": "QueryGrantsResponse is the response type for the Query/Authorizations RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/authz/v1beta1/grants/grantee/{grantee}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GranteeGrants returns a list of `GrantAuthorization` by grantee.",
                "description": "Since: cosmos-sdk 0.45.2",
                "operationId": "CosmosAuthzV1Beta1GranteeGrants",
                "parameters": [
                    {
                        "name": "grantee",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "description": "grants is a list of grants granted to the grantee.",
                                            "items": {
                                                "title": "GrantAuthorization extends a grant with both the addresses of the grantee and granter.\nIt is used in genesis.proto and query.proto",
                                                "type": "object",
                                                "properties": {
                                                    "granter": {
                                                        "type": "string"
                                                    },
                                                    "grantee": {
                                                        "type": "string"
                                                    },
                                                    "authorization": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "expiration": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "description": "Since: cosmos-sdk 0.45.2"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines an pagination for the response."
                                        }
                                    },
                                    "description": "QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/authz/v1beta1/grants/granter/{granter}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GranterGrants returns list of `GrantAuthorization`, granted by granter.",
                "description": "Since: cosmos-sdk 0.45.2",
                "operationId": "CosmosAuthzV1Beta1GranterGrants",
                "parameters": [
                    {
                        "name": "granter",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "grants": {
                                            "type": "array",
                                            "description": "grants is a list of grants granted by the granter.",
                                            "items": {
                                                "title": "GrantAuthorization extends a grant with both the addresses of the grantee and granter.\nIt is used in genesis.proto and query.proto",
                                                "type": "object",
                                                "properties": {
                                                    "granter": {
                                                        "type": "string"
                                                    },
                                                    "grantee": {
                                                        "type": "string"
                                                    },
                                                    "authorization": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "expiration": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "description": "Since: cosmos-sdk 0.45.2"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines an pagination for the response."
                                        }
                                    },
                                    "description": "QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/balances/{address}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "AllBalances queries the balance of all coins for a single account.",
                "operationId": "CosmosBankV1Beta1AllBalances",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address to query balances for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "balances": {
                                            "type": "array",
                                            "description": "balances is the balances of all the coins.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "denom": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryAllBalancesResponse is the response type for the Query/AllBalances RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/balances/{address}/by_denom": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Balance queries the balance of a single coin for a single account.",
                "operationId": "CosmosBankV1Beta1Balance",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address to query balances for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "denom",
                        "in": "query",
                        "description": "denom is the coin denom to query balances for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "balance": {
                                            "type": "object",
                                            "properties": {
                                                "denom": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "string"
                                                }
                                            },
                                            "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                        }
                                    },
                                    "description": "QueryBalanceResponse is the response type for the Query/Balance RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/denoms_metadata": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DenomsMetadata queries the client metadata for all registered coin denominations.",
                "operationId": "CosmosBankV1Beta1DenomsMetadata",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "metadatas": {
                                            "type": "array",
                                            "description": "metadata provides the client information for all the registered tokens.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "denom_units": {
                                                        "title": "denom_units represents the list of DenomUnit's for a given coin",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "denom": {
                                                                    "type": "string",
                                                                    "description": "denom represents the string name of the given denom unit (e.g uatom)."
                                                                },
                                                                "exponent": {
                                                                    "type": "integer",
                                                                    "description": "exponent represents power of 10 exponent that one must\nraise the base_denom to in order to equal the given DenomUnit's denom\n1 denom = 1^exponent base_denom\n(e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with\nexponent = 6, thus: 1 atom = 10^6 uatom).",
                                                                    "format": "int64"
                                                                },
                                                                "aliases": {
                                                                    "title": "aliases is a list of string aliases for the given denom",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "description": "DenomUnit represents a struct that describes a given\ndenomination unit of the basic token."
                                                        }
                                                    },
                                                    "base": {
                                                        "type": "string",
                                                        "description": "base represents the base denom (should be the DenomUnit with exponent = 0)."
                                                    },
                                                    "display": {
                                                        "type": "string",
                                                        "description": "display indicates the suggested denom that should be\ndisplayed in clients."
                                                    },
                                                    "name": {
                                                        "title": "name defines the name of the token (eg: Cosmos Atom)",
                                                        "type": "string",
                                                        "description": "Since: cosmos-sdk 0.43"
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "description": "symbol is the token symbol usually shown on exchanges (eg: ATOM). This can\nbe the same as the display.\n\nSince: cosmos-sdk 0.43"
                                                    }
                                                },
                                                "description": "Metadata represents a struct that describes\na basic token."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/denoms_metadata/{denom}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DenomsMetadata queries the client metadata of a given coin denomination.",
                "operationId": "CosmosBankV1Beta1DenomMetadata",
                "parameters": [
                    {
                        "name": "denom",
                        "in": "path",
                        "description": "denom is the coin denom to query the metadata for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "metadata": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string"
                                                },
                                                "denom_units": {
                                                    "title": "denom_units represents the list of DenomUnit's for a given coin",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string",
                                                                "description": "denom represents the string name of the given denom unit (e.g uatom)."
                                                            },
                                                            "exponent": {
                                                                "type": "integer",
                                                                "description": "exponent represents power of 10 exponent that one must\nraise the base_denom to in order to equal the given DenomUnit's denom\n1 denom = 1^exponent base_denom\n(e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with\nexponent = 6, thus: 1 atom = 10^6 uatom).",
                                                                "format": "int64"
                                                            },
                                                            "aliases": {
                                                                "title": "aliases is a list of string aliases for the given denom",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "DenomUnit represents a struct that describes a given\ndenomination unit of the basic token."
                                                    }
                                                },
                                                "base": {
                                                    "type": "string",
                                                    "description": "base represents the base denom (should be the DenomUnit with exponent = 0)."
                                                },
                                                "display": {
                                                    "type": "string",
                                                    "description": "display indicates the suggested denom that should be\ndisplayed in clients."
                                                },
                                                "name": {
                                                    "title": "name defines the name of the token (eg: Cosmos Atom)",
                                                    "type": "string",
                                                    "description": "Since: cosmos-sdk 0.43"
                                                },
                                                "symbol": {
                                                    "type": "string",
                                                    "description": "symbol is the token symbol usually shown on exchanges (eg: ATOM). This can\nbe the same as the display.\n\nSince: cosmos-sdk 0.43"
                                                }
                                            },
                                            "description": "Metadata represents a struct that describes\na basic token."
                                        }
                                    },
                                    "description": "QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries the parameters of x/bank module.",
                "operationId": "CosmosBankV1Beta1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "send_enabled": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "enabled": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "description": "SendEnabled maps coin denom to a send_enabled status (whether a denom is\nsendable)."
                                                    }
                                                },
                                                "default_send_enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "description": "Params defines the parameters for the bank module."
                                        }
                                    },
                                    "description": "QueryParamsResponse defines the response type for querying x/bank parameters."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/spendable_balances/{address}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "SpendableBalances queries the spenable balance of all coins for a single\naccount.",
                "operationId": "CosmosBankV1Beta1SpendableBalances",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address to query spendable balances for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "balances": {
                                            "type": "array",
                                            "description": "balances is the spendable balances of all the coins.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "denom": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QuerySpendableBalancesResponse defines the gRPC response structure for querying\nan account's spendable balances."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/supply": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "TotalSupply queries the total supply of all coins.",
                "operationId": "CosmosBankV1Beta1TotalSupply",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC\nmethod",
                                    "type": "object",
                                    "properties": {
                                        "supply": {
                                            "title": "supply is the supply of the coins",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "denom": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response.\n\nSince: cosmos-sdk 0.43"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/bank/v1beta1/supply/{denom}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "SupplyOf queries the supply of a single coin.",
                "operationId": "CosmosBankV1Beta1SupplyOf",
                "parameters": [
                    {
                        "name": "denom",
                        "in": "path",
                        "description": "denom is the coin denom to query balances for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "object",
                                            "properties": {
                                                "denom": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "string"
                                                }
                                            },
                                            "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                        }
                                    },
                                    "description": "QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/base/tendermint/v1beta1/blocks/latest": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetLatestBlock returns the latest block.",
                "operationId": "CosmosBaseTendermintV1Beta1GetLatestBlock",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "block_id": {
                                            "title": "BlockID",
                                            "type": "object",
                                            "properties": {
                                                "hash": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "part_set_header": {
                                                    "title": "PartsetHeader",
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "block": {
                                            "type": "object",
                                            "properties": {
                                                "header": {
                                                    "type": "object",
                                                    "properties": {
                                                        "version": {
                                                            "title": "basic block info",
                                                            "type": "object",
                                                            "properties": {
                                                                "block": {
                                                                    "type": "string",
                                                                    "format": "uint64"
                                                                },
                                                                "app": {
                                                                    "type": "string",
                                                                    "format": "uint64"
                                                                }
                                                            },
                                                            "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
                                                        },
                                                        "chain_id": {
                                                            "type": "string"
                                                        },
                                                        "height": {
                                                            "type": "string",
                                                            "format": "int64"
                                                        },
                                                        "time": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "last_block_id": {
                                                            "title": "BlockID",
                                                            "type": "object",
                                                            "properties": {
                                                                "hash": {
                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                    "type": "string",
                                                                    "format": "byte"
                                                                },
                                                                "part_set_header": {
                                                                    "title": "PartsetHeader",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        },
                                                                        "hash": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "last_commit_hash": {
                                                            "title": "hashes of block data",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "data_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "validators_hash": {
                                                            "title": "hashes from the app output from the prev block",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "next_validators_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "consensus_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "app_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "last_results_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "evidence_hash": {
                                                            "title": "consensus info",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "proposer_address": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        }
                                                    },
                                                    "description": "Header defines the structure of a Tendermint block header."
                                                },
                                                "data": {
                                                    "title": "Data contains the set of transactions included in the block",
                                                    "type": "object",
                                                    "properties": {
                                                        "txs": {
                                                            "type": "array",
                                                            "description": "Txs that will be applied by state @ block.Height+1.\nNOTE: not all txs here are valid.  We're just agreeing on the order first.\nThis means that block.AppHash does not include these txs.",
                                                            "items": {
                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                "type": "string",
                                                                "format": "byte"
                                                            }
                                                        }
                                                    }
                                                },
                                                "evidence": {
                                                    "type": "object",
                                                    "properties": {
                                                        "evidence": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "duplicate_vote_evidence": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "vote_a": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "description": "SignedMsgType is a type of signed message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals",
                                                                                        "default": "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                        "enum": [
                                                                                            "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                            "SIGNED_MSG_TYPE_PREVOTE",
                                                                                            "SIGNED_MSG_TYPE_PRECOMMIT",
                                                                                            "SIGNED_MSG_TYPE_PROPOSAL"
                                                                                        ]
                                                                                    },
                                                                                    "height": {
                                                                                        "type": "string",
                                                                                        "format": "int64"
                                                                                    },
                                                                                    "round": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "block_id": {
                                                                                        "title": "BlockID",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "hash": {
                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                "type": "string",
                                                                                                "format": "byte"
                                                                                            },
                                                                                            "part_set_header": {
                                                                                                "title": "PartsetHeader",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "total": {
                                                                                                        "type": "integer",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "timestamp": {
                                                                                        "type": "string",
                                                                                        "format": "date-time"
                                                                                    },
                                                                                    "validator_address": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "validator_index": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "signature": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    }
                                                                                },
                                                                                "description": "Vote represents a prevote, precommit, or commit vote from validators for\nconsensus."
                                                                            },
                                                                            "vote_b": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "description": "SignedMsgType is a type of signed message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals",
                                                                                        "default": "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                        "enum": [
                                                                                            "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                            "SIGNED_MSG_TYPE_PREVOTE",
                                                                                            "SIGNED_MSG_TYPE_PRECOMMIT",
                                                                                            "SIGNED_MSG_TYPE_PROPOSAL"
                                                                                        ]
                                                                                    },
                                                                                    "height": {
                                                                                        "type": "string",
                                                                                        "format": "int64"
                                                                                    },
                                                                                    "round": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "block_id": {
                                                                                        "title": "BlockID",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "hash": {
                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                "type": "string",
                                                                                                "format": "byte"
                                                                                            },
                                                                                            "part_set_header": {
                                                                                                "title": "PartsetHeader",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "total": {
                                                                                                        "type": "integer",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "timestamp": {
                                                                                        "type": "string",
                                                                                        "format": "date-time"
                                                                                    },
                                                                                    "validator_address": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "validator_index": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "signature": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    }
                                                                                },
                                                                                "description": "Vote represents a prevote, precommit, or commit vote from validators for\nconsensus."
                                                                            },
                                                                            "total_voting_power": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "validator_power": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "timestamp": {
                                                                                "type": "string",
                                                                                "format": "date-time"
                                                                            }
                                                                        },
                                                                        "description": "DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes."
                                                                    },
                                                                    "light_client_attack_evidence": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "conflicting_block": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "signed_header": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "header": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "version": {
                                                                                                        "title": "basic block info",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "block": {
                                                                                                                "type": "string",
                                                                                                                "format": "uint64"
                                                                                                            },
                                                                                                            "app": {
                                                                                                                "type": "string",
                                                                                                                "format": "uint64"
                                                                                                            }
                                                                                                        },
                                                                                                        "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
                                                                                                    },
                                                                                                    "chain_id": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "height": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "time": {
                                                                                                        "type": "string",
                                                                                                        "format": "date-time"
                                                                                                    },
                                                                                                    "last_block_id": {
                                                                                                        "title": "BlockID",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "hash": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            },
                                                                                                            "part_set_header": {
                                                                                                                "title": "PartsetHeader",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "total": {
                                                                                                                        "type": "integer",
                                                                                                                        "format": "int64"
                                                                                                                    },
                                                                                                                    "hash": {
                                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                        "type": "string",
                                                                                                                        "format": "byte"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "last_commit_hash": {
                                                                                                        "title": "hashes of block data",
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "data_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "validators_hash": {
                                                                                                        "title": "hashes from the app output from the prev block",
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "next_validators_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "consensus_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "app_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "last_results_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "evidence_hash": {
                                                                                                        "title": "consensus info",
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "proposer_address": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    }
                                                                                                },
                                                                                                "description": "Header defines the structure of a Tendermint block header."
                                                                                            },
                                                                                            "commit": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "height": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "round": {
                                                                                                        "type": "integer",
                                                                                                        "format": "int32"
                                                                                                    },
                                                                                                    "block_id": {
                                                                                                        "title": "BlockID",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "hash": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            },
                                                                                                            "part_set_header": {
                                                                                                                "title": "PartsetHeader",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "total": {
                                                                                                                        "type": "integer",
                                                                                                                        "format": "int64"
                                                                                                                    },
                                                                                                                    "hash": {
                                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                        "type": "string",
                                                                                                                        "format": "byte"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "signatures": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "block_id_flag": {
                                                                                                                    "title": "BlockIdFlag indicates which BlcokID the signature is for",
                                                                                                                    "type": "string",
                                                                                                                    "default": "BLOCK_ID_FLAG_UNKNOWN",
                                                                                                                    "enum": [
                                                                                                                        "BLOCK_ID_FLAG_UNKNOWN",
                                                                                                                        "BLOCK_ID_FLAG_ABSENT",
                                                                                                                        "BLOCK_ID_FLAG_COMMIT",
                                                                                                                        "BLOCK_ID_FLAG_NIL"
                                                                                                                    ]
                                                                                                                },
                                                                                                                "validator_address": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                },
                                                                                                                "timestamp": {
                                                                                                                    "type": "string",
                                                                                                                    "format": "date-time"
                                                                                                                },
                                                                                                                "signature": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                }
                                                                                                            },
                                                                                                            "description": "CommitSig is a part of the Vote included in a Commit."
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "description": "Commit contains the evidence that a block was committed by a set of validators."
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "validator_set": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "validators": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "address": {
                                                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                            "type": "string",
                                                                                                            "format": "byte"
                                                                                                        },
                                                                                                        "pub_key": {
                                                                                                            "title": "PublicKey defines the keys available for use with Tendermint Validators",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "ed25519": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                },
                                                                                                                "secp256k1": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "voting_power": {
                                                                                                            "type": "string",
                                                                                                            "format": "int64"
                                                                                                        },
                                                                                                        "proposer_priority": {
                                                                                                            "type": "string",
                                                                                                            "format": "int64"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "proposer": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "address": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "pub_key": {
                                                                                                        "title": "PublicKey defines the keys available for use with Tendermint Validators",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "ed25519": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            },
                                                                                                            "secp256k1": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "voting_power": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "proposer_priority": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "total_voting_power": {
                                                                                                "type": "string",
                                                                                                "format": "int64"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "common_height": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "byzantine_validators": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "address": {
                                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                            "type": "string",
                                                                                            "format": "byte"
                                                                                        },
                                                                                        "pub_key": {
                                                                                            "title": "PublicKey defines the keys available for use with Tendermint Validators",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ed25519": {
                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                    "type": "string",
                                                                                                    "format": "byte"
                                                                                                },
                                                                                                "secp256k1": {
                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                    "type": "string",
                                                                                                    "format": "byte"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "voting_power": {
                                                                                            "type": "string",
                                                                                            "format": "int64"
                                                                                        },
                                                                                        "proposer_priority": {
                                                                                            "type": "string",
                                                                                            "format": "int64"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "total_voting_power": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "timestamp": {
                                                                                "type": "string",
                                                                                "format": "date-time"
                                                                            }
                                                                        },
                                                                        "description": "LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "last_commit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "height": {
                                                            "type": "string",
                                                            "format": "int64"
                                                        },
                                                        "round": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                        },
                                                        "block_id": {
                                                            "title": "BlockID",
                                                            "type": "object",
                                                            "properties": {
                                                                "hash": {
                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                    "type": "string",
                                                                    "format": "byte"
                                                                },
                                                                "part_set_header": {
                                                                    "title": "PartsetHeader",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        },
                                                                        "hash": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "signatures": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "block_id_flag": {
                                                                        "title": "BlockIdFlag indicates which BlcokID the signature is for",
                                                                        "type": "string",
                                                                        "default": "BLOCK_ID_FLAG_UNKNOWN",
                                                                        "enum": [
                                                                            "BLOCK_ID_FLAG_UNKNOWN",
                                                                            "BLOCK_ID_FLAG_ABSENT",
                                                                            "BLOCK_ID_FLAG_COMMIT",
                                                                            "BLOCK_ID_FLAG_NIL"
                                                                        ]
                                                                    },
                                                                    "validator_address": {
                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "timestamp": {
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "signature": {
                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    }
                                                                },
                                                                "description": "CommitSig is a part of the Vote included in a Commit."
                                                            }
                                                        }
                                                    },
                                                    "description": "Commit contains the evidence that a block was committed by a set of validators."
                                                }
                                            }
                                        }
                                    },
                                    "description": "GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/base/tendermint/v1beta1/blocks/{height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetBlockByHeight queries block for given height.",
                "operationId": "CosmosBaseTendermintV1Beta1GetBlockByHeight",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "block_id": {
                                            "title": "BlockID",
                                            "type": "object",
                                            "properties": {
                                                "hash": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "part_set_header": {
                                                    "title": "PartsetHeader",
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "block": {
                                            "type": "object",
                                            "properties": {
                                                "header": {
                                                    "type": "object",
                                                    "properties": {
                                                        "version": {
                                                            "title": "basic block info",
                                                            "type": "object",
                                                            "properties": {
                                                                "block": {
                                                                    "type": "string",
                                                                    "format": "uint64"
                                                                },
                                                                "app": {
                                                                    "type": "string",
                                                                    "format": "uint64"
                                                                }
                                                            },
                                                            "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
                                                        },
                                                        "chain_id": {
                                                            "type": "string"
                                                        },
                                                        "height": {
                                                            "type": "string",
                                                            "format": "int64"
                                                        },
                                                        "time": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "last_block_id": {
                                                            "title": "BlockID",
                                                            "type": "object",
                                                            "properties": {
                                                                "hash": {
                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                    "type": "string",
                                                                    "format": "byte"
                                                                },
                                                                "part_set_header": {
                                                                    "title": "PartsetHeader",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        },
                                                                        "hash": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "last_commit_hash": {
                                                            "title": "hashes of block data",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "data_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "validators_hash": {
                                                            "title": "hashes from the app output from the prev block",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "next_validators_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "consensus_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "app_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "last_results_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "evidence_hash": {
                                                            "title": "consensus info",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "proposer_address": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        }
                                                    },
                                                    "description": "Header defines the structure of a Tendermint block header."
                                                },
                                                "data": {
                                                    "title": "Data contains the set of transactions included in the block",
                                                    "type": "object",
                                                    "properties": {
                                                        "txs": {
                                                            "type": "array",
                                                            "description": "Txs that will be applied by state @ block.Height+1.\nNOTE: not all txs here are valid.  We're just agreeing on the order first.\nThis means that block.AppHash does not include these txs.",
                                                            "items": {
                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                "type": "string",
                                                                "format": "byte"
                                                            }
                                                        }
                                                    }
                                                },
                                                "evidence": {
                                                    "type": "object",
                                                    "properties": {
                                                        "evidence": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "duplicate_vote_evidence": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "vote_a": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "description": "SignedMsgType is a type of signed message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals",
                                                                                        "default": "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                        "enum": [
                                                                                            "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                            "SIGNED_MSG_TYPE_PREVOTE",
                                                                                            "SIGNED_MSG_TYPE_PRECOMMIT",
                                                                                            "SIGNED_MSG_TYPE_PROPOSAL"
                                                                                        ]
                                                                                    },
                                                                                    "height": {
                                                                                        "type": "string",
                                                                                        "format": "int64"
                                                                                    },
                                                                                    "round": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "block_id": {
                                                                                        "title": "BlockID",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "hash": {
                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                "type": "string",
                                                                                                "format": "byte"
                                                                                            },
                                                                                            "part_set_header": {
                                                                                                "title": "PartsetHeader",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "total": {
                                                                                                        "type": "integer",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "timestamp": {
                                                                                        "type": "string",
                                                                                        "format": "date-time"
                                                                                    },
                                                                                    "validator_address": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "validator_index": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "signature": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    }
                                                                                },
                                                                                "description": "Vote represents a prevote, precommit, or commit vote from validators for\nconsensus."
                                                                            },
                                                                            "vote_b": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "description": "SignedMsgType is a type of signed message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals",
                                                                                        "default": "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                        "enum": [
                                                                                            "SIGNED_MSG_TYPE_UNKNOWN",
                                                                                            "SIGNED_MSG_TYPE_PREVOTE",
                                                                                            "SIGNED_MSG_TYPE_PRECOMMIT",
                                                                                            "SIGNED_MSG_TYPE_PROPOSAL"
                                                                                        ]
                                                                                    },
                                                                                    "height": {
                                                                                        "type": "string",
                                                                                        "format": "int64"
                                                                                    },
                                                                                    "round": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "block_id": {
                                                                                        "title": "BlockID",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "hash": {
                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                "type": "string",
                                                                                                "format": "byte"
                                                                                            },
                                                                                            "part_set_header": {
                                                                                                "title": "PartsetHeader",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "total": {
                                                                                                        "type": "integer",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "timestamp": {
                                                                                        "type": "string",
                                                                                        "format": "date-time"
                                                                                    },
                                                                                    "validator_address": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "validator_index": {
                                                                                        "type": "integer",
                                                                                        "format": "int32"
                                                                                    },
                                                                                    "signature": {
                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    }
                                                                                },
                                                                                "description": "Vote represents a prevote, precommit, or commit vote from validators for\nconsensus."
                                                                            },
                                                                            "total_voting_power": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "validator_power": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "timestamp": {
                                                                                "type": "string",
                                                                                "format": "date-time"
                                                                            }
                                                                        },
                                                                        "description": "DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes."
                                                                    },
                                                                    "light_client_attack_evidence": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "conflicting_block": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "signed_header": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "header": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "version": {
                                                                                                        "title": "basic block info",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "block": {
                                                                                                                "type": "string",
                                                                                                                "format": "uint64"
                                                                                                            },
                                                                                                            "app": {
                                                                                                                "type": "string",
                                                                                                                "format": "uint64"
                                                                                                            }
                                                                                                        },
                                                                                                        "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
                                                                                                    },
                                                                                                    "chain_id": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "height": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "time": {
                                                                                                        "type": "string",
                                                                                                        "format": "date-time"
                                                                                                    },
                                                                                                    "last_block_id": {
                                                                                                        "title": "BlockID",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "hash": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            },
                                                                                                            "part_set_header": {
                                                                                                                "title": "PartsetHeader",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "total": {
                                                                                                                        "type": "integer",
                                                                                                                        "format": "int64"
                                                                                                                    },
                                                                                                                    "hash": {
                                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                        "type": "string",
                                                                                                                        "format": "byte"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "last_commit_hash": {
                                                                                                        "title": "hashes of block data",
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "data_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "validators_hash": {
                                                                                                        "title": "hashes from the app output from the prev block",
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "next_validators_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "consensus_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "app_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "last_results_hash": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "evidence_hash": {
                                                                                                        "title": "consensus info",
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "proposer_address": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    }
                                                                                                },
                                                                                                "description": "Header defines the structure of a Tendermint block header."
                                                                                            },
                                                                                            "commit": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "height": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "round": {
                                                                                                        "type": "integer",
                                                                                                        "format": "int32"
                                                                                                    },
                                                                                                    "block_id": {
                                                                                                        "title": "BlockID",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "hash": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            },
                                                                                                            "part_set_header": {
                                                                                                                "title": "PartsetHeader",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "total": {
                                                                                                                        "type": "integer",
                                                                                                                        "format": "int64"
                                                                                                                    },
                                                                                                                    "hash": {
                                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                        "type": "string",
                                                                                                                        "format": "byte"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "signatures": {
                                                                                                        "type": "array",
                                                                                                        "items": {
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "block_id_flag": {
                                                                                                                    "title": "BlockIdFlag indicates which BlcokID the signature is for",
                                                                                                                    "type": "string",
                                                                                                                    "default": "BLOCK_ID_FLAG_UNKNOWN",
                                                                                                                    "enum": [
                                                                                                                        "BLOCK_ID_FLAG_UNKNOWN",
                                                                                                                        "BLOCK_ID_FLAG_ABSENT",
                                                                                                                        "BLOCK_ID_FLAG_COMMIT",
                                                                                                                        "BLOCK_ID_FLAG_NIL"
                                                                                                                    ]
                                                                                                                },
                                                                                                                "validator_address": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                },
                                                                                                                "timestamp": {
                                                                                                                    "type": "string",
                                                                                                                    "format": "date-time"
                                                                                                                },
                                                                                                                "signature": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                }
                                                                                                            },
                                                                                                            "description": "CommitSig is a part of the Vote included in a Commit."
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "description": "Commit contains the evidence that a block was committed by a set of validators."
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "validator_set": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "validators": {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "address": {
                                                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                            "type": "string",
                                                                                                            "format": "byte"
                                                                                                        },
                                                                                                        "pub_key": {
                                                                                                            "title": "PublicKey defines the keys available for use with Tendermint Validators",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "ed25519": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                },
                                                                                                                "secp256k1": {
                                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                    "type": "string",
                                                                                                                    "format": "byte"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "voting_power": {
                                                                                                            "type": "string",
                                                                                                            "format": "int64"
                                                                                                        },
                                                                                                        "proposer_priority": {
                                                                                                            "type": "string",
                                                                                                            "format": "int64"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "proposer": {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "address": {
                                                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                        "type": "string",
                                                                                                        "format": "byte"
                                                                                                    },
                                                                                                    "pub_key": {
                                                                                                        "title": "PublicKey defines the keys available for use with Tendermint Validators",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "ed25519": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            },
                                                                                                            "secp256k1": {
                                                                                                                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                                "type": "string",
                                                                                                                "format": "byte"
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "voting_power": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    },
                                                                                                    "proposer_priority": {
                                                                                                        "type": "string",
                                                                                                        "format": "int64"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "total_voting_power": {
                                                                                                "type": "string",
                                                                                                "format": "int64"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "common_height": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "byzantine_validators": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "address": {
                                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                            "type": "string",
                                                                                            "format": "byte"
                                                                                        },
                                                                                        "pub_key": {
                                                                                            "title": "PublicKey defines the keys available for use with Tendermint Validators",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ed25519": {
                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                    "type": "string",
                                                                                                    "format": "byte"
                                                                                                },
                                                                                                "secp256k1": {
                                                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                                                    "type": "string",
                                                                                                    "format": "byte"
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "voting_power": {
                                                                                            "type": "string",
                                                                                            "format": "int64"
                                                                                        },
                                                                                        "proposer_priority": {
                                                                                            "type": "string",
                                                                                            "format": "int64"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "total_voting_power": {
                                                                                "type": "string",
                                                                                "format": "int64"
                                                                            },
                                                                            "timestamp": {
                                                                                "type": "string",
                                                                                "format": "date-time"
                                                                            }
                                                                        },
                                                                        "description": "LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "last_commit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "height": {
                                                            "type": "string",
                                                            "format": "int64"
                                                        },
                                                        "round": {
                                                            "type": "integer",
                                                            "format": "int32"
                                                        },
                                                        "block_id": {
                                                            "title": "BlockID",
                                                            "type": "object",
                                                            "properties": {
                                                                "hash": {
                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                    "type": "string",
                                                                    "format": "byte"
                                                                },
                                                                "part_set_header": {
                                                                    "title": "PartsetHeader",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        },
                                                                        "hash": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "signatures": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "block_id_flag": {
                                                                        "title": "BlockIdFlag indicates which BlcokID the signature is for",
                                                                        "type": "string",
                                                                        "default": "BLOCK_ID_FLAG_UNKNOWN",
                                                                        "enum": [
                                                                            "BLOCK_ID_FLAG_UNKNOWN",
                                                                            "BLOCK_ID_FLAG_ABSENT",
                                                                            "BLOCK_ID_FLAG_COMMIT",
                                                                            "BLOCK_ID_FLAG_NIL"
                                                                        ]
                                                                    },
                                                                    "validator_address": {
                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "timestamp": {
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "signature": {
                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    }
                                                                },
                                                                "description": "CommitSig is a part of the Vote included in a Commit."
                                                            }
                                                        }
                                                    },
                                                    "description": "Commit contains the evidence that a block was committed by a set of validators."
                                                }
                                            }
                                        }
                                    },
                                    "description": "GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/base/tendermint/v1beta1/node_info": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetNodeInfo queries the current node info.",
                "operationId": "CosmosBaseTendermintV1Beta1GetNodeInfo",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "default_node_info": {
                                            "type": "object",
                                            "properties": {
                                                "protocol_version": {
                                                    "type": "object",
                                                    "properties": {
                                                        "p2p": {
                                                            "type": "string",
                                                            "format": "uint64"
                                                        },
                                                        "block": {
                                                            "type": "string",
                                                            "format": "uint64"
                                                        },
                                                        "app": {
                                                            "type": "string",
                                                            "format": "uint64"
                                                        }
                                                    }
                                                },
                                                "default_node_id": {
                                                    "type": "string"
                                                },
                                                "listen_addr": {
                                                    "type": "string"
                                                },
                                                "network": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                },
                                                "channels": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "moniker": {
                                                    "type": "string"
                                                },
                                                "other": {
                                                    "type": "object",
                                                    "properties": {
                                                        "tx_index": {
                                                            "type": "string"
                                                        },
                                                        "rpc_address": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "application_version": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "app_name": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                },
                                                "git_commit": {
                                                    "type": "string"
                                                },
                                                "build_tags": {
                                                    "type": "string"
                                                },
                                                "go_version": {
                                                    "type": "string"
                                                },
                                                "build_deps": {
                                                    "type": "array",
                                                    "items": {
                                                        "title": "Module is the type for VersionInfo",
                                                        "type": "object",
                                                        "properties": {
                                                            "path": {
                                                                "title": "module path",
                                                                "type": "string"
                                                            },
                                                            "version": {
                                                                "title": "module version",
                                                                "type": "string"
                                                            },
                                                            "sum": {
                                                                "title": "checksum",
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                },
                                                "cosmos_sdk_version": {
                                                    "title": "Since: cosmos-sdk 0.43",
                                                    "type": "string"
                                                }
                                            },
                                            "description": "VersionInfo is the type for the GetNodeInfoResponse message."
                                        }
                                    },
                                    "description": "GetNodeInfoResponse is the request type for the Query/GetNodeInfo RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/base/tendermint/v1beta1/syncing": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetSyncing queries node syncing.",
                "operationId": "CosmosBaseTendermintV1Beta1GetSyncing",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "syncing": {
                                            "type": "boolean"
                                        }
                                    },
                                    "description": "GetSyncingResponse is the response type for the Query/GetSyncing RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/base/tendermint/v1beta1/validatorsets/latest": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetLatestValidatorSet queries latest validator-set.",
                "operationId": "CosmosBaseTendermintV1Beta1GetLatestValidatorSet",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "block_height": {
                                            "type": "string",
                                            "format": "int64"
                                        },
                                        "validators": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "pub_key": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "voting_power": {
                                                        "type": "string",
                                                        "format": "int64"
                                                    },
                                                    "proposer_priority": {
                                                        "type": "string",
                                                        "format": "int64"
                                                    }
                                                },
                                                "description": "Validator is the type for the validator-set."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines an pagination for the response."
                                        }
                                    },
                                    "description": "GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/base/tendermint/v1beta1/validatorsets/{height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetValidatorSetByHeight queries validator-set at a given height.",
                "operationId": "CosmosBaseTendermintV1Beta1GetValidatorSetByHeight",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "block_height": {
                                            "type": "string",
                                            "format": "int64"
                                        },
                                        "validators": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "pub_key": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "voting_power": {
                                                        "type": "string",
                                                        "format": "int64"
                                                    },
                                                    "proposer_priority": {
                                                        "type": "string",
                                                        "format": "int64"
                                                    }
                                                },
                                                "description": "Validator is the type for the validator-set."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines an pagination for the response."
                                        }
                                    },
                                    "description": "GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/community_pool": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "CommunityPool queries the community pool coins.",
                "operationId": "CosmosDistributionV1Beta1CommunityPool",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "pool": {
                                            "type": "array",
                                            "description": "pool defines community pool's coins.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "denom": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
                                            }
                                        }
                                    },
                                    "description": "QueryCommunityPoolResponse is the response type for the Query/CommunityPool\nRPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegationTotalRewards queries the total rewards accrued by a each\nvalidator.",
                "operationId": "CosmosDistributionV1Beta1DelegationTotalRewards",
                "parameters": [
                    {
                        "name": "delegator_address",
                        "in": "path",
                        "description": "delegator_address defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rewards": {
                                            "type": "array",
                                            "description": "rewards defines all the rewards accrued by a delegator.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "validator_address": {
                                                        "type": "string"
                                                    },
                                                    "reward": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "denom": {
                                                                    "type": "string"
                                                                },
                                                                "amount": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
                                                        }
                                                    }
                                                },
                                                "description": "DelegationDelegatorReward represents the properties\nof a delegator's delegation reward."
                                            }
                                        },
                                        "total": {
                                            "type": "array",
                                            "description": "total defines the sum of all the rewards.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "denom": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
                                            }
                                        }
                                    },
                                    "description": "QueryDelegationTotalRewardsResponse is the response type for the\nQuery/DelegationTotalRewards RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegationRewards queries the total rewards accrued by a delegation.",
                "operationId": "CosmosDistributionV1Beta1DelegationRewards",
                "parameters": [
                    {
                        "name": "delegator_address",
                        "in": "path",
                        "description": "delegator_address defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "validator_address",
                        "in": "path",
                        "description": "validator_address defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rewards": {
                                            "type": "array",
                                            "description": "rewards defines the rewards accrued by a delegation.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "denom": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
                                            }
                                        }
                                    },
                                    "description": "QueryDelegationRewardsResponse is the response type for the\nQuery/DelegationRewards RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegatorValidators queries the validators of a delegator.",
                "operationId": "CosmosDistributionV1Beta1DelegatorValidators",
                "parameters": [
                    {
                        "name": "delegator_address",
                        "in": "path",
                        "description": "delegator_address defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "validators": {
                                            "type": "array",
                                            "description": "validators defines the validators a delegator is delegating for.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "description": "QueryDelegatorValidatorsResponse is the response type for the\nQuery/DelegatorValidators RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegatorWithdrawAddress queries withdraw address of a delegator.",
                "operationId": "CosmosDistributionV1Beta1DelegatorWithdrawAddress",
                "parameters": [
                    {
                        "name": "delegator_address",
                        "in": "path",
                        "description": "delegator_address defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "withdraw_address": {
                                            "type": "string",
                                            "description": "withdraw_address defines the delegator address to query for."
                                        }
                                    },
                                    "description": "QueryDelegatorWithdrawAddressResponse is the response type for the\nQuery/DelegatorWithdrawAddress RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries params of the distribution module.",
                "operationId": "CosmosDistributionV1Beta1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "community_tax": {
                                                    "type": "string"
                                                },
                                                "base_proposer_reward": {
                                                    "type": "string"
                                                },
                                                "bonus_proposer_reward": {
                                                    "type": "string"
                                                },
                                                "withdraw_addr_enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/validators/{validator_address}/commission": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ValidatorCommission queries accumulated commission for a validator.",
                "operationId": "CosmosDistributionV1Beta1ValidatorCommission",
                "parameters": [
                    {
                        "name": "validator_address",
                        "in": "path",
                        "description": "validator_address defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryValidatorCommissionResponse is the response type for the\nQuery/ValidatorCommission RPC method",
                                    "type": "object",
                                    "properties": {
                                        "commission": {
                                            "type": "object",
                                            "properties": {
                                                "commission": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                }
                                            },
                                            "description": "commission defines the commision the validator received."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ValidatorOutstandingRewards queries rewards of a validator address.",
                "operationId": "CosmosDistributionV1Beta1ValidatorOutstandingRewards",
                "parameters": [
                    {
                        "name": "validator_address",
                        "in": "path",
                        "description": "validator_address defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rewards": {
                                            "type": "object",
                                            "properties": {
                                                "rewards": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                }
                                            },
                                            "description": "ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards\nfor a validator inexpensive to track, allows simple sanity checks."
                                        }
                                    },
                                    "description": "QueryValidatorOutstandingRewardsResponse is the response type for the\nQuery/ValidatorOutstandingRewards RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ValidatorSlashes queries slash events of a validator.",
                "operationId": "CosmosDistributionV1Beta1ValidatorSlashes",
                "parameters": [
                    {
                        "name": "validator_address",
                        "in": "path",
                        "description": "validator_address defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "starting_height",
                        "in": "query",
                        "description": "starting_height defines the optional starting height to query the slashes.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "ending_height",
                        "in": "query",
                        "description": "starting_height defines the optional ending height to query the slashes.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "slashes": {
                                            "type": "array",
                                            "description": "slashes defines the slashes the validator received.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "validator_period": {
                                                        "type": "string",
                                                        "format": "uint64"
                                                    },
                                                    "fraction": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "ValidatorSlashEvent represents a validator slash event.\nHeight is implicit within the store key.\nThis is needed to calculate appropriate amount of staking tokens\nfor delegations which are withdrawn after a slash has occurred."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryValidatorSlashesResponse is the response type for the\nQuery/ValidatorSlashes RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/evidence/v1beta1/evidence": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "AllEvidence queries all evidence.",
                "operationId": "CosmosEvidenceV1Beta1AllEvidence",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "evidence": {
                                            "type": "array",
                                            "description": "evidence returns all evidences.",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/evidence/v1beta1/evidence/{evidence_hash}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Evidence queries evidence based on evidence hash.",
                "operationId": "CosmosEvidenceV1Beta1Evidence",
                "parameters": [
                    {
                        "name": "evidence_hash",
                        "in": "path",
                        "description": "evidence_hash defines the hash of the requested evidence.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "evidence": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        }
                                    },
                                    "description": "QueryEvidenceResponse is the response type for the Query/Evidence RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/params/{params_type}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries all parameters of the gov module.",
                "operationId": "CosmosGovV1Beta1Params",
                "parameters": [
                    {
                        "name": "params_type",
                        "in": "path",
                        "description": "params_type defines which parameters to query for, can be one of \"voting\",\n\"tallying\" or \"deposit\".",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "voting_params": {
                                            "type": "object",
                                            "properties": {
                                                "voting_period": {
                                                    "type": "string",
                                                    "description": "Length of the voting period."
                                                }
                                            },
                                            "description": "voting_params defines the parameters related to voting."
                                        },
                                        "deposit_params": {
                                            "type": "object",
                                            "properties": {
                                                "min_deposit": {
                                                    "type": "array",
                                                    "description": "Minimum deposit for a proposal to enter voting period.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                },
                                                "max_deposit_period": {
                                                    "type": "string",
                                                    "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2\n months."
                                                }
                                            },
                                            "description": "deposit_params defines the parameters related to deposit."
                                        },
                                        "tally_params": {
                                            "type": "object",
                                            "properties": {
                                                "quorum": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "description": "Minimum percentage of total stake needed to vote for a result to be\n considered valid.",
                                                    "format": "byte"
                                                },
                                                "threshold": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "description": "Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.",
                                                    "format": "byte"
                                                },
                                                "veto_threshold": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "description": "Minimum value of Veto votes to Total votes ratio for proposal to be\n vetoed. Default value: 1/3.",
                                                    "format": "byte"
                                                }
                                            },
                                            "description": "tally_params defines the parameters related to tally."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Proposals queries all proposals based on given status.",
                "operationId": "CosmosGovV1Beta1Proposals",
                "parameters": [
                    {
                        "name": "proposal_status",
                        "in": "query",
                        "description": "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
                        "schema": {
                            "type": "string",
                            "default": "PROPOSAL_STATUS_UNSPECIFIED",
                            "enum": [
                                "PROPOSAL_STATUS_UNSPECIFIED",
                                "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                                "PROPOSAL_STATUS_VOTING_PERIOD",
                                "PROPOSAL_STATUS_PASSED",
                                "PROPOSAL_STATUS_REJECTED",
                                "PROPOSAL_STATUS_FAILED"
                            ]
                        }
                    },
                    {
                        "name": "voter",
                        "in": "query",
                        "description": "voter defines the voter address for the proposals.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "depositor",
                        "in": "query",
                        "description": "depositor defines the deposit addresses from the proposals.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "proposals": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "proposal_id": {
                                                        "type": "string",
                                                        "format": "uint64"
                                                    },
                                                    "content": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
                                                        "default": "PROPOSAL_STATUS_UNSPECIFIED",
                                                        "enum": [
                                                            "PROPOSAL_STATUS_UNSPECIFIED",
                                                            "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                                                            "PROPOSAL_STATUS_VOTING_PERIOD",
                                                            "PROPOSAL_STATUS_PASSED",
                                                            "PROPOSAL_STATUS_REJECTED",
                                                            "PROPOSAL_STATUS_FAILED"
                                                        ]
                                                    },
                                                    "final_tally_result": {
                                                        "type": "object",
                                                        "properties": {
                                                            "yes": {
                                                                "type": "string"
                                                            },
                                                            "abstain": {
                                                                "type": "string"
                                                            },
                                                            "no": {
                                                                "type": "string"
                                                            },
                                                            "no_with_veto": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "TallyResult defines a standard tally for a governance proposal."
                                                    },
                                                    "submit_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "deposit_end_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "total_deposit": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "denom": {
                                                                    "type": "string"
                                                                },
                                                                "amount": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                        }
                                                    },
                                                    "voting_start_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "voting_end_time": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "description": "Proposal defines the core field members of a governance proposal."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryProposalsResponse is the response type for the Query/Proposals RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals/{proposal_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Proposal queries proposal details based on ProposalID.",
                "operationId": "CosmosGovV1Beta1Proposal",
                "parameters": [
                    {
                        "name": "proposal_id",
                        "in": "path",
                        "description": "proposal_id defines the unique id of the proposal.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "proposal": {
                                            "type": "object",
                                            "properties": {
                                                "proposal_id": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "content": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
                                                    "default": "PROPOSAL_STATUS_UNSPECIFIED",
                                                    "enum": [
                                                        "PROPOSAL_STATUS_UNSPECIFIED",
                                                        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                                                        "PROPOSAL_STATUS_VOTING_PERIOD",
                                                        "PROPOSAL_STATUS_PASSED",
                                                        "PROPOSAL_STATUS_REJECTED",
                                                        "PROPOSAL_STATUS_FAILED"
                                                    ]
                                                },
                                                "final_tally_result": {
                                                    "type": "object",
                                                    "properties": {
                                                        "yes": {
                                                            "type": "string"
                                                        },
                                                        "abstain": {
                                                            "type": "string"
                                                        },
                                                        "no": {
                                                            "type": "string"
                                                        },
                                                        "no_with_veto": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "description": "TallyResult defines a standard tally for a governance proposal."
                                                },
                                                "submit_time": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "deposit_end_time": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "total_deposit": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                },
                                                "voting_start_time": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "voting_end_time": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "description": "Proposal defines the core field members of a governance proposal."
                                        }
                                    },
                                    "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Deposits queries all deposits of a single proposal.",
                "operationId": "CosmosGovV1Beta1Deposits",
                "parameters": [
                    {
                        "name": "proposal_id",
                        "in": "path",
                        "description": "proposal_id defines the unique id of the proposal.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deposits": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "proposal_id": {
                                                        "type": "string",
                                                        "format": "uint64"
                                                    },
                                                    "depositor": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "denom": {
                                                                    "type": "string"
                                                                },
                                                                "amount": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                        }
                                                    }
                                                },
                                                "description": "Deposit defines an amount deposited by an account address to an active\nproposal."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryDepositsResponse is the response type for the Query/Deposits RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Deposit queries single deposit information based proposalID, depositAddr.",
                "operationId": "CosmosGovV1Beta1Deposit",
                "parameters": [
                    {
                        "name": "proposal_id",
                        "in": "path",
                        "description": "proposal_id defines the unique id of the proposal.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "depositor",
                        "in": "path",
                        "description": "depositor defines the deposit addresses from the proposals.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deposit": {
                                            "type": "object",
                                            "properties": {
                                                "proposal_id": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "depositor": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                }
                                            },
                                            "description": "Deposit defines an amount deposited by an account address to an active\nproposal."
                                        }
                                    },
                                    "description": "QueryDepositResponse is the response type for the Query/Deposit RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "TallyResult queries the tally of a proposal vote.",
                "operationId": "CosmosGovV1Beta1TallyResult",
                "parameters": [
                    {
                        "name": "proposal_id",
                        "in": "path",
                        "description": "proposal_id defines the unique id of the proposal.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tally": {
                                            "type": "object",
                                            "properties": {
                                                "yes": {
                                                    "type": "string"
                                                },
                                                "abstain": {
                                                    "type": "string"
                                                },
                                                "no": {
                                                    "type": "string"
                                                },
                                                "no_with_veto": {
                                                    "type": "string"
                                                }
                                            },
                                            "description": "TallyResult defines a standard tally for a governance proposal."
                                        }
                                    },
                                    "description": "QueryTallyResultResponse is the response type for the Query/Tally RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Votes queries votes of a given proposal.",
                "operationId": "CosmosGovV1Beta1Votes",
                "parameters": [
                    {
                        "name": "proposal_id",
                        "in": "path",
                        "description": "proposal_id defines the unique id of the proposal.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "votes": {
                                            "type": "array",
                                            "description": "votes defined the queried votes.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "proposal_id": {
                                                        "type": "string",
                                                        "format": "uint64"
                                                    },
                                                    "voter": {
                                                        "type": "string"
                                                    },
                                                    "option": {
                                                        "type": "string",
                                                        "description": "Deprecated: Prefer to use `options` instead. This field is set in queries\nif and only if `len(options) == 1` and that option has weight 1. In all\nother cases, this field will default to VOTE_OPTION_UNSPECIFIED.",
                                                        "default": "VOTE_OPTION_UNSPECIFIED",
                                                        "enum": [
                                                            "VOTE_OPTION_UNSPECIFIED",
                                                            "VOTE_OPTION_YES",
                                                            "VOTE_OPTION_ABSTAIN",
                                                            "VOTE_OPTION_NO",
                                                            "VOTE_OPTION_NO_WITH_VETO"
                                                        ]
                                                    },
                                                    "options": {
                                                        "title": "Since: cosmos-sdk 0.43",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "option": {
                                                                    "type": "string",
                                                                    "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.",
                                                                    "default": "VOTE_OPTION_UNSPECIFIED",
                                                                    "enum": [
                                                                        "VOTE_OPTION_UNSPECIFIED",
                                                                        "VOTE_OPTION_YES",
                                                                        "VOTE_OPTION_ABSTAIN",
                                                                        "VOTE_OPTION_NO",
                                                                        "VOTE_OPTION_NO_WITH_VETO"
                                                                    ]
                                                                },
                                                                "weight": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "description": "WeightedVoteOption defines a unit of vote for vote split.\n\nSince: cosmos-sdk 0.43"
                                                        }
                                                    }
                                                },
                                                "description": "Vote defines a vote on a governance proposal.\nA Vote consists of a proposal ID, the voter, and the vote option."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryVotesResponse is the response type for the Query/Votes RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Vote queries voted information based on proposalID, voterAddr.",
                "operationId": "CosmosGovV1Beta1Vote",
                "parameters": [
                    {
                        "name": "proposal_id",
                        "in": "path",
                        "description": "proposal_id defines the unique id of the proposal.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "voter",
                        "in": "path",
                        "description": "voter defines the oter address for the proposals.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "vote": {
                                            "type": "object",
                                            "properties": {
                                                "proposal_id": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "voter": {
                                                    "type": "string"
                                                },
                                                "option": {
                                                    "type": "string",
                                                    "description": "Deprecated: Prefer to use `options` instead. This field is set in queries\nif and only if `len(options) == 1` and that option has weight 1. In all\nother cases, this field will default to VOTE_OPTION_UNSPECIFIED.",
                                                    "default": "VOTE_OPTION_UNSPECIFIED",
                                                    "enum": [
                                                        "VOTE_OPTION_UNSPECIFIED",
                                                        "VOTE_OPTION_YES",
                                                        "VOTE_OPTION_ABSTAIN",
                                                        "VOTE_OPTION_NO",
                                                        "VOTE_OPTION_NO_WITH_VETO"
                                                    ]
                                                },
                                                "options": {
                                                    "title": "Since: cosmos-sdk 0.43",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "option": {
                                                                "type": "string",
                                                                "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.",
                                                                "default": "VOTE_OPTION_UNSPECIFIED",
                                                                "enum": [
                                                                    "VOTE_OPTION_UNSPECIFIED",
                                                                    "VOTE_OPTION_YES",
                                                                    "VOTE_OPTION_ABSTAIN",
                                                                    "VOTE_OPTION_NO",
                                                                    "VOTE_OPTION_NO_WITH_VETO"
                                                                ]
                                                            },
                                                            "weight": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "WeightedVoteOption defines a unit of vote for vote split.\n\nSince: cosmos-sdk 0.43"
                                                    }
                                                }
                                            },
                                            "description": "Vote defines a vote on a governance proposal.\nA Vote consists of a proposal ID, the voter, and the vote option."
                                        }
                                    },
                                    "description": "QueryVoteResponse is the response type for the Query/Vote RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/mint/v1beta1/annual_provisions": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "AnnualProvisions current minting annual provisions value.",
                "operationId": "CosmosMintV1Beta1AnnualProvisions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "annual_provisions": {
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "description": "annual_provisions is the current minting annual provisions value.",
                                            "format": "byte"
                                        }
                                    },
                                    "description": "QueryAnnualProvisionsResponse is the response type for the\nQuery/AnnualProvisions RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/mint/v1beta1/inflation": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Inflation returns the current minting inflation value.",
                "operationId": "CosmosMintV1Beta1Inflation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "inflation": {
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "description": "inflation is the current minting inflation value.",
                                            "format": "byte"
                                        }
                                    },
                                    "description": "QueryInflationResponse is the response type for the Query/Inflation RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/mint/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params returns the total set of minting parameters.",
                "operationId": "CosmosMintV1Beta1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "mint_denom": {
                                                    "title": "type of coin to mint",
                                                    "type": "string"
                                                },
                                                "inflation_rate_change": {
                                                    "title": "maximum annual change in inflation rate",
                                                    "type": "string"
                                                },
                                                "inflation_max": {
                                                    "title": "maximum inflation rate",
                                                    "type": "string"
                                                },
                                                "inflation_min": {
                                                    "title": "minimum inflation rate",
                                                    "type": "string"
                                                },
                                                "goal_bonded": {
                                                    "title": "goal of percent bonded atoms",
                                                    "type": "string"
                                                },
                                                "blocks_per_year": {
                                                    "title": "expected blocks per year",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/params/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries a specific parameter of a module, given its subspace and\nkey.",
                "operationId": "CosmosParamsV1Beta1Params",
                "parameters": [
                    {
                        "name": "subspace",
                        "in": "query",
                        "description": "subspace defines the module to query the parameter for.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "key defines the key of the parameter in the subspace.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "param": {
                                            "type": "object",
                                            "properties": {
                                                "subspace": {
                                                    "type": "string"
                                                },
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            },
                                            "description": "param defines the queried parameter."
                                        }
                                    },
                                    "description": "QueryParamsResponse is response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/slashing/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries the parameters of slashing module",
                "operationId": "CosmosSlashingV1Beta1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryParamsResponse is the response type for the Query/Params RPC method",
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "signed_blocks_window": {
                                                    "type": "string",
                                                    "format": "int64"
                                                },
                                                "min_signed_per_window": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "downtime_jail_duration": {
                                                    "type": "string"
                                                },
                                                "slash_fraction_double_sign": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "slash_fraction_downtime": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                }
                                            },
                                            "description": "Params represents the parameters used for by the slashing module."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/slashing/v1beta1/signing_infos": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "SigningInfos queries signing info of all validators",
                "operationId": "CosmosSlashingV1Beta1SigningInfos",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC\nmethod",
                                    "type": "object",
                                    "properties": {
                                        "info": {
                                            "title": "info is the signing info of all validators",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "start_height": {
                                                        "title": "Height at which validator was first a candidate OR was unjailed",
                                                        "type": "string",
                                                        "format": "int64"
                                                    },
                                                    "index_offset": {
                                                        "type": "string",
                                                        "description": "Index which is incremented each time the validator was a bonded\nin a block and may have signed a precommit or not. This in conjunction with the\n`SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.",
                                                        "format": "int64"
                                                    },
                                                    "jailed_until": {
                                                        "type": "string",
                                                        "description": "Timestamp until which the validator is jailed due to liveness downtime.",
                                                        "format": "date-time"
                                                    },
                                                    "tombstoned": {
                                                        "type": "boolean",
                                                        "description": "Whether or not a validator has been tombstoned (killed out of validator set). It is set\nonce the validator commits an equivocation or for any other configured misbehiavor."
                                                    },
                                                    "missed_blocks_counter": {
                                                        "type": "string",
                                                        "description": "A counter kept to avoid unnecessary array reads.\nNote that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.",
                                                        "format": "int64"
                                                    }
                                                },
                                                "description": "ValidatorSigningInfo defines a validator's signing info for monitoring their\nliveness activity."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/slashing/v1beta1/signing_infos/{cons_address}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "SigningInfo queries the signing info of given cons address",
                "operationId": "CosmosSlashingV1Beta1SigningInfo",
                "parameters": [
                    {
                        "name": "cons_address",
                        "in": "path",
                        "description": "cons_address is the address to query signing info of",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC\nmethod",
                                    "type": "object",
                                    "properties": {
                                        "val_signing_info": {
                                            "title": "val_signing_info is the signing info of requested val cons address",
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "start_height": {
                                                    "title": "Height at which validator was first a candidate OR was unjailed",
                                                    "type": "string",
                                                    "format": "int64"
                                                },
                                                "index_offset": {
                                                    "type": "string",
                                                    "description": "Index which is incremented each time the validator was a bonded\nin a block and may have signed a precommit or not. This in conjunction with the\n`SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.",
                                                    "format": "int64"
                                                },
                                                "jailed_until": {
                                                    "type": "string",
                                                    "description": "Timestamp until which the validator is jailed due to liveness downtime.",
                                                    "format": "date-time"
                                                },
                                                "tombstoned": {
                                                    "type": "boolean",
                                                    "description": "Whether or not a validator has been tombstoned (killed out of validator set). It is set\nonce the validator commits an equivocation or for any other configured misbehiavor."
                                                },
                                                "missed_blocks_counter": {
                                                    "type": "string",
                                                    "description": "A counter kept to avoid unnecessary array reads.\nNote that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.",
                                                    "format": "int64"
                                                }
                                            },
                                            "description": "ValidatorSigningInfo defines a validator's signing info for monitoring their\nliveness activity."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/delegations/{delegator_addr}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegatorDelegations queries all delegations of a given delegator address.",
                "operationId": "CosmosStakingV1Beta1DelegatorDelegations",
                "parameters": [
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "delegation_responses": {
                                            "type": "array",
                                            "description": "delegation_responses defines all the delegations' info of a delegator.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "delegation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "delegator_address": {
                                                                "type": "string",
                                                                "description": "delegator_address is the bech32-encoded address of the delegator."
                                                            },
                                                            "validator_address": {
                                                                "type": "string",
                                                                "description": "validator_address is the bech32-encoded address of the validator."
                                                            },
                                                            "shares": {
                                                                "type": "string",
                                                                "description": "shares define the delegation shares received."
                                                            }
                                                        },
                                                        "description": "Delegation represents the bond with tokens held by an account. It is\nowned by one delegator, and is associated with the voting power of one\nvalidator."
                                                    },
                                                    "balance": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                },
                                                "description": "DelegationResponse is equivalent to Delegation except that it contains a\nbalance in addition to shares which is more suitable for client responses."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryDelegatorDelegationsResponse is response type for the\nQuery/DelegatorDelegations RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Redelegations queries redelegations of given address.",
                "operationId": "CosmosStakingV1Beta1Redelegations",
                "parameters": [
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "src_validator_addr",
                        "in": "query",
                        "description": "src_validator_addr defines the validator address to redelegate from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dst_validator_addr",
                        "in": "query",
                        "description": "dst_validator_addr defines the validator address to redelegate to.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "redelegation_responses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "redelegation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "delegator_address": {
                                                                "type": "string",
                                                                "description": "delegator_address is the bech32-encoded address of the delegator."
                                                            },
                                                            "validator_src_address": {
                                                                "type": "string",
                                                                "description": "validator_src_address is the validator redelegation source operator address."
                                                            },
                                                            "validator_dst_address": {
                                                                "type": "string",
                                                                "description": "validator_dst_address is the validator redelegation destination operator address."
                                                            },
                                                            "entries": {
                                                                "type": "array",
                                                                "description": "entries are the redelegation entries.",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "creation_height": {
                                                                            "type": "string",
                                                                            "description": "creation_height  defines the height which the redelegation took place.",
                                                                            "format": "int64"
                                                                        },
                                                                        "completion_time": {
                                                                            "type": "string",
                                                                            "description": "completion_time defines the unix time for redelegation completion.",
                                                                            "format": "date-time"
                                                                        },
                                                                        "initial_balance": {
                                                                            "type": "string",
                                                                            "description": "initial_balance defines the initial balance when redelegation started."
                                                                        },
                                                                        "shares_dst": {
                                                                            "type": "string",
                                                                            "description": "shares_dst is the amount of destination-validator shares created by redelegation."
                                                                        }
                                                                    },
                                                                    "description": "RedelegationEntry defines a redelegation object with relevant metadata."
                                                                }
                                                            }
                                                        },
                                                        "description": "Redelegation contains the list of a particular delegator's redelegating bonds\nfrom a particular source validator to a particular destination validator."
                                                    },
                                                    "entries": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "redelegation_entry": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "creation_height": {
                                                                            "type": "string",
                                                                            "description": "creation_height  defines the height which the redelegation took place.",
                                                                            "format": "int64"
                                                                        },
                                                                        "completion_time": {
                                                                            "type": "string",
                                                                            "description": "completion_time defines the unix time for redelegation completion.",
                                                                            "format": "date-time"
                                                                        },
                                                                        "initial_balance": {
                                                                            "type": "string",
                                                                            "description": "initial_balance defines the initial balance when redelegation started."
                                                                        },
                                                                        "shares_dst": {
                                                                            "type": "string",
                                                                            "description": "shares_dst is the amount of destination-validator shares created by redelegation."
                                                                        }
                                                                    },
                                                                    "description": "RedelegationEntry defines a redelegation object with relevant metadata."
                                                                },
                                                                "balance": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "description": "RedelegationEntryResponse is equivalent to a RedelegationEntry except that it\ncontains a balance in addition to shares which is more suitable for client\nresponses."
                                                        }
                                                    }
                                                },
                                                "description": "RedelegationResponse is equivalent to a Redelegation except that its entries\ncontain a balance in addition to shares which is more suitable for client\nresponses."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryRedelegationsResponse is response type for the Query/Redelegations RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegatorUnbondingDelegations queries all unbonding delegations of a given\ndelegator address.",
                "operationId": "CosmosStakingV1Beta1DelegatorUnbondingDelegations",
                "parameters": [
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unbonding_responses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "delegator_address": {
                                                        "type": "string",
                                                        "description": "delegator_address is the bech32-encoded address of the delegator."
                                                    },
                                                    "validator_address": {
                                                        "type": "string",
                                                        "description": "validator_address is the bech32-encoded address of the validator."
                                                    },
                                                    "entries": {
                                                        "type": "array",
                                                        "description": "entries are the unbonding delegation entries.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "creation_height": {
                                                                    "type": "string",
                                                                    "description": "creation_height is the height which the unbonding took place.",
                                                                    "format": "int64"
                                                                },
                                                                "completion_time": {
                                                                    "type": "string",
                                                                    "description": "completion_time is the unix time for unbonding completion.",
                                                                    "format": "date-time"
                                                                },
                                                                "initial_balance": {
                                                                    "type": "string",
                                                                    "description": "initial_balance defines the tokens initially scheduled to receive at completion."
                                                                },
                                                                "balance": {
                                                                    "type": "string",
                                                                    "description": "balance defines the tokens to receive at completion."
                                                                }
                                                            },
                                                            "description": "UnbondingDelegationEntry defines an unbonding object with relevant metadata."
                                                        }
                                                    }
                                                },
                                                "description": "UnbondingDelegation stores all of a single delegator's unbonding bonds\nfor a single validator in an time-ordered list."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryUnbondingDelegatorDelegationsResponse is response type for the\nQuery/UnbondingDelegatorDelegations RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegatorValidators queries all validators info for given delegator\naddress.",
                "operationId": "CosmosStakingV1Beta1DelegatorValidators",
                "parameters": [
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "validators": {
                                            "type": "array",
                                            "description": "validators defines the the validators' info of a delegator.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "operator_address": {
                                                        "type": "string",
                                                        "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
                                                    },
                                                    "consensus_pubkey": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "jailed": {
                                                        "type": "boolean",
                                                        "description": "jailed defined whether the validator has been jailed from bonded status or not."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "status is the validator status (bonded/unbonding/unbonded).",
                                                        "default": "BOND_STATUS_UNSPECIFIED",
                                                        "enum": [
                                                            "BOND_STATUS_UNSPECIFIED",
                                                            "BOND_STATUS_UNBONDED",
                                                            "BOND_STATUS_UNBONDING",
                                                            "BOND_STATUS_BONDED"
                                                        ]
                                                    },
                                                    "tokens": {
                                                        "type": "string",
                                                        "description": "tokens define the delegated tokens (incl. self-delegation)."
                                                    },
                                                    "delegator_shares": {
                                                        "type": "string",
                                                        "description": "delegator_shares defines total shares issued to a validator's delegators."
                                                    },
                                                    "description": {
                                                        "type": "object",
                                                        "properties": {
                                                            "moniker": {
                                                                "type": "string",
                                                                "description": "moniker defines a human-readable name for the validator."
                                                            },
                                                            "identity": {
                                                                "type": "string",
                                                                "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
                                                            },
                                                            "website": {
                                                                "type": "string",
                                                                "description": "website defines an optional website link."
                                                            },
                                                            "security_contact": {
                                                                "type": "string",
                                                                "description": "security_contact defines an optional email for security contact."
                                                            },
                                                            "details": {
                                                                "type": "string",
                                                                "description": "details define other optional details."
                                                            }
                                                        },
                                                        "description": "description defines the description terms for the validator."
                                                    },
                                                    "unbonding_height": {
                                                        "type": "string",
                                                        "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.",
                                                        "format": "int64"
                                                    },
                                                    "unbonding_time": {
                                                        "type": "string",
                                                        "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",
                                                        "format": "date-time"
                                                    },
                                                    "commission": {
                                                        "type": "object",
                                                        "properties": {
                                                            "commission_rates": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "rate": {
                                                                        "type": "string",
                                                                        "description": "rate is the commission rate charged to delegators, as a fraction."
                                                                    },
                                                                    "max_rate": {
                                                                        "type": "string",
                                                                        "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
                                                                    },
                                                                    "max_change_rate": {
                                                                        "type": "string",
                                                                        "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
                                                                    }
                                                                },
                                                                "description": "commission_rates defines the initial commission rates to be used for creating a validator."
                                                            },
                                                            "update_time": {
                                                                "type": "string",
                                                                "description": "update_time is the last time the commission rate was changed.",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "description": "commission defines the commission parameters."
                                                    },
                                                    "min_self_delegation": {
                                                        "type": "string",
                                                        "description": "min_self_delegation is the validator's self declared minimum self delegation."
                                                    }
                                                },
                                                "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryDelegatorValidatorsResponse is response type for the\nQuery/DelegatorValidators RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DelegatorValidator queries validator info for given delegator validator\npair.",
                "operationId": "CosmosStakingV1Beta1DelegatorValidator",
                "parameters": [
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "validator_addr",
                        "in": "path",
                        "description": "validator_addr defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "validator": {
                                            "type": "object",
                                            "properties": {
                                                "operator_address": {
                                                    "type": "string",
                                                    "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
                                                },
                                                "consensus_pubkey": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                },
                                                "jailed": {
                                                    "type": "boolean",
                                                    "description": "jailed defined whether the validator has been jailed from bonded status or not."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "status is the validator status (bonded/unbonding/unbonded).",
                                                    "default": "BOND_STATUS_UNSPECIFIED",
                                                    "enum": [
                                                        "BOND_STATUS_UNSPECIFIED",
                                                        "BOND_STATUS_UNBONDED",
                                                        "BOND_STATUS_UNBONDING",
                                                        "BOND_STATUS_BONDED"
                                                    ]
                                                },
                                                "tokens": {
                                                    "type": "string",
                                                    "description": "tokens define the delegated tokens (incl. self-delegation)."
                                                },
                                                "delegator_shares": {
                                                    "type": "string",
                                                    "description": "delegator_shares defines total shares issued to a validator's delegators."
                                                },
                                                "description": {
                                                    "type": "object",
                                                    "properties": {
                                                        "moniker": {
                                                            "type": "string",
                                                            "description": "moniker defines a human-readable name for the validator."
                                                        },
                                                        "identity": {
                                                            "type": "string",
                                                            "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
                                                        },
                                                        "website": {
                                                            "type": "string",
                                                            "description": "website defines an optional website link."
                                                        },
                                                        "security_contact": {
                                                            "type": "string",
                                                            "description": "security_contact defines an optional email for security contact."
                                                        },
                                                        "details": {
                                                            "type": "string",
                                                            "description": "details define other optional details."
                                                        }
                                                    },
                                                    "description": "description defines the description terms for the validator."
                                                },
                                                "unbonding_height": {
                                                    "type": "string",
                                                    "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.",
                                                    "format": "int64"
                                                },
                                                "unbonding_time": {
                                                    "type": "string",
                                                    "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",
                                                    "format": "date-time"
                                                },
                                                "commission": {
                                                    "type": "object",
                                                    "properties": {
                                                        "commission_rates": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rate": {
                                                                    "type": "string",
                                                                    "description": "rate is the commission rate charged to delegators, as a fraction."
                                                                },
                                                                "max_rate": {
                                                                    "type": "string",
                                                                    "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
                                                                },
                                                                "max_change_rate": {
                                                                    "type": "string",
                                                                    "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
                                                                }
                                                            },
                                                            "description": "commission_rates defines the initial commission rates to be used for creating a validator."
                                                        },
                                                        "update_time": {
                                                            "type": "string",
                                                            "description": "update_time is the last time the commission rate was changed.",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "description": "commission defines the commission parameters."
                                                },
                                                "min_self_delegation": {
                                                    "type": "string",
                                                    "description": "min_self_delegation is the validator's self declared minimum self delegation."
                                                }
                                            },
                                            "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
                                        }
                                    },
                                    "description": "QueryDelegatorValidatorResponse response type for the\nQuery/DelegatorValidator RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/historical_info/{height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "HistoricalInfo queries the historical info for given height.",
                "operationId": "CosmosStakingV1Beta1HistoricalInfo",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "description": "height defines at which height to query the historical info.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hist": {
                                            "type": "object",
                                            "properties": {
                                                "header": {
                                                    "type": "object",
                                                    "properties": {
                                                        "version": {
                                                            "title": "basic block info",
                                                            "type": "object",
                                                            "properties": {
                                                                "block": {
                                                                    "type": "string",
                                                                    "format": "uint64"
                                                                },
                                                                "app": {
                                                                    "type": "string",
                                                                    "format": "uint64"
                                                                }
                                                            },
                                                            "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
                                                        },
                                                        "chain_id": {
                                                            "type": "string"
                                                        },
                                                        "height": {
                                                            "type": "string",
                                                            "format": "int64"
                                                        },
                                                        "time": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "last_block_id": {
                                                            "title": "prev block info",
                                                            "type": "object",
                                                            "properties": {
                                                                "hash": {
                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                    "type": "string",
                                                                    "format": "byte"
                                                                },
                                                                "part_set_header": {
                                                                    "title": "PartsetHeader",
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        },
                                                                        "hash": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "last_commit_hash": {
                                                            "title": "hashes of block data",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "data_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "validators_hash": {
                                                            "title": "hashes from the app output from the prev block",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "next_validators_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "consensus_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "app_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "last_results_hash": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "evidence_hash": {
                                                            "title": "consensus info",
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        },
                                                        "proposer_address": {
                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                            "type": "string",
                                                            "format": "byte"
                                                        }
                                                    },
                                                    "description": "Header defines the structure of a Tendermint block header."
                                                },
                                                "valset": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "operator_address": {
                                                                "type": "string",
                                                                "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
                                                            },
                                                            "consensus_pubkey": {
                                                                "type": "object",
                                                                "additionalProperties": {
                                                                    "type": "object"
                                                                },
                                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                            },
                                                            "jailed": {
                                                                "type": "boolean",
                                                                "description": "jailed defined whether the validator has been jailed from bonded status or not."
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "description": "status is the validator status (bonded/unbonding/unbonded).",
                                                                "default": "BOND_STATUS_UNSPECIFIED",
                                                                "enum": [
                                                                    "BOND_STATUS_UNSPECIFIED",
                                                                    "BOND_STATUS_UNBONDED",
                                                                    "BOND_STATUS_UNBONDING",
                                                                    "BOND_STATUS_BONDED"
                                                                ]
                                                            },
                                                            "tokens": {
                                                                "type": "string",
                                                                "description": "tokens define the delegated tokens (incl. self-delegation)."
                                                            },
                                                            "delegator_shares": {
                                                                "type": "string",
                                                                "description": "delegator_shares defines total shares issued to a validator's delegators."
                                                            },
                                                            "description": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "moniker": {
                                                                        "type": "string",
                                                                        "description": "moniker defines a human-readable name for the validator."
                                                                    },
                                                                    "identity": {
                                                                        "type": "string",
                                                                        "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
                                                                    },
                                                                    "website": {
                                                                        "type": "string",
                                                                        "description": "website defines an optional website link."
                                                                    },
                                                                    "security_contact": {
                                                                        "type": "string",
                                                                        "description": "security_contact defines an optional email for security contact."
                                                                    },
                                                                    "details": {
                                                                        "type": "string",
                                                                        "description": "details define other optional details."
                                                                    }
                                                                },
                                                                "description": "description defines the description terms for the validator."
                                                            },
                                                            "unbonding_height": {
                                                                "type": "string",
                                                                "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.",
                                                                "format": "int64"
                                                            },
                                                            "unbonding_time": {
                                                                "type": "string",
                                                                "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",
                                                                "format": "date-time"
                                                            },
                                                            "commission": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "commission_rates": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "rate": {
                                                                                "type": "string",
                                                                                "description": "rate is the commission rate charged to delegators, as a fraction."
                                                                            },
                                                                            "max_rate": {
                                                                                "type": "string",
                                                                                "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
                                                                            },
                                                                            "max_change_rate": {
                                                                                "type": "string",
                                                                                "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
                                                                            }
                                                                        },
                                                                        "description": "commission_rates defines the initial commission rates to be used for creating a validator."
                                                                    },
                                                                    "update_time": {
                                                                        "type": "string",
                                                                        "description": "update_time is the last time the commission rate was changed.",
                                                                        "format": "date-time"
                                                                    }
                                                                },
                                                                "description": "commission defines the commission parameters."
                                                            },
                                                            "min_self_delegation": {
                                                                "type": "string",
                                                                "description": "min_self_delegation is the validator's self declared minimum self delegation."
                                                            }
                                                        },
                                                        "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
                                                    }
                                                }
                                            },
                                            "description": "hist defines the historical info at the given height."
                                        }
                                    },
                                    "description": "QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Parameters queries the staking parameters.",
                "operationId": "CosmosStakingV1Beta1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "unbonding_time": {
                                                    "type": "string",
                                                    "description": "unbonding_time is the time duration of unbonding."
                                                },
                                                "max_validators": {
                                                    "type": "integer",
                                                    "description": "max_validators is the maximum number of validators.",
                                                    "format": "int64"
                                                },
                                                "max_entries": {
                                                    "type": "integer",
                                                    "description": "max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).",
                                                    "format": "int64"
                                                },
                                                "historical_entries": {
                                                    "type": "integer",
                                                    "description": "historical_entries is the number of historical entries to persist.",
                                                    "format": "int64"
                                                },
                                                "bond_denom": {
                                                    "type": "string",
                                                    "description": "bond_denom defines the bondable coin denomination."
                                                }
                                            },
                                            "description": "params holds all the parameters of this module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/pool": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Pool queries the pool info.",
                "operationId": "CosmosStakingV1Beta1Pool",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "pool": {
                                            "type": "object",
                                            "properties": {
                                                "not_bonded_tokens": {
                                                    "type": "string"
                                                },
                                                "bonded_tokens": {
                                                    "type": "string"
                                                }
                                            },
                                            "description": "pool defines the pool info."
                                        }
                                    },
                                    "description": "QueryPoolResponse is response type for the Query/Pool RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/validators": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Validators queries all validators that match the given status.",
                "operationId": "CosmosStakingV1Beta1Validators",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status enables to query for validators matching a given status.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryValidatorsResponse is response type for the Query/Validators RPC method",
                                    "type": "object",
                                    "properties": {
                                        "validators": {
                                            "type": "array",
                                            "description": "validators contains all the queried validators.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "operator_address": {
                                                        "type": "string",
                                                        "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
                                                    },
                                                    "consensus_pubkey": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    },
                                                    "jailed": {
                                                        "type": "boolean",
                                                        "description": "jailed defined whether the validator has been jailed from bonded status or not."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "description": "status is the validator status (bonded/unbonding/unbonded).",
                                                        "default": "BOND_STATUS_UNSPECIFIED",
                                                        "enum": [
                                                            "BOND_STATUS_UNSPECIFIED",
                                                            "BOND_STATUS_UNBONDED",
                                                            "BOND_STATUS_UNBONDING",
                                                            "BOND_STATUS_BONDED"
                                                        ]
                                                    },
                                                    "tokens": {
                                                        "type": "string",
                                                        "description": "tokens define the delegated tokens (incl. self-delegation)."
                                                    },
                                                    "delegator_shares": {
                                                        "type": "string",
                                                        "description": "delegator_shares defines total shares issued to a validator's delegators."
                                                    },
                                                    "description": {
                                                        "type": "object",
                                                        "properties": {
                                                            "moniker": {
                                                                "type": "string",
                                                                "description": "moniker defines a human-readable name for the validator."
                                                            },
                                                            "identity": {
                                                                "type": "string",
                                                                "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
                                                            },
                                                            "website": {
                                                                "type": "string",
                                                                "description": "website defines an optional website link."
                                                            },
                                                            "security_contact": {
                                                                "type": "string",
                                                                "description": "security_contact defines an optional email for security contact."
                                                            },
                                                            "details": {
                                                                "type": "string",
                                                                "description": "details define other optional details."
                                                            }
                                                        },
                                                        "description": "description defines the description terms for the validator."
                                                    },
                                                    "unbonding_height": {
                                                        "type": "string",
                                                        "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.",
                                                        "format": "int64"
                                                    },
                                                    "unbonding_time": {
                                                        "type": "string",
                                                        "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",
                                                        "format": "date-time"
                                                    },
                                                    "commission": {
                                                        "type": "object",
                                                        "properties": {
                                                            "commission_rates": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "rate": {
                                                                        "type": "string",
                                                                        "description": "rate is the commission rate charged to delegators, as a fraction."
                                                                    },
                                                                    "max_rate": {
                                                                        "type": "string",
                                                                        "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
                                                                    },
                                                                    "max_change_rate": {
                                                                        "type": "string",
                                                                        "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
                                                                    }
                                                                },
                                                                "description": "commission_rates defines the initial commission rates to be used for creating a validator."
                                                            },
                                                            "update_time": {
                                                                "type": "string",
                                                                "description": "update_time is the last time the commission rate was changed.",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "description": "commission defines the commission parameters."
                                                    },
                                                    "min_self_delegation": {
                                                        "type": "string",
                                                        "description": "min_self_delegation is the validator's self declared minimum self delegation."
                                                    }
                                                },
                                                "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/validators/{validator_addr}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Validator queries validator info for given validator address.",
                "operationId": "CosmosStakingV1Beta1Validator",
                "parameters": [
                    {
                        "name": "validator_addr",
                        "in": "path",
                        "description": "validator_addr defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryValidatorResponse is response type for the Query/Validator RPC method",
                                    "type": "object",
                                    "properties": {
                                        "validator": {
                                            "type": "object",
                                            "properties": {
                                                "operator_address": {
                                                    "type": "string",
                                                    "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
                                                },
                                                "consensus_pubkey": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                },
                                                "jailed": {
                                                    "type": "boolean",
                                                    "description": "jailed defined whether the validator has been jailed from bonded status or not."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "description": "status is the validator status (bonded/unbonding/unbonded).",
                                                    "default": "BOND_STATUS_UNSPECIFIED",
                                                    "enum": [
                                                        "BOND_STATUS_UNSPECIFIED",
                                                        "BOND_STATUS_UNBONDED",
                                                        "BOND_STATUS_UNBONDING",
                                                        "BOND_STATUS_BONDED"
                                                    ]
                                                },
                                                "tokens": {
                                                    "type": "string",
                                                    "description": "tokens define the delegated tokens (incl. self-delegation)."
                                                },
                                                "delegator_shares": {
                                                    "type": "string",
                                                    "description": "delegator_shares defines total shares issued to a validator's delegators."
                                                },
                                                "description": {
                                                    "type": "object",
                                                    "properties": {
                                                        "moniker": {
                                                            "type": "string",
                                                            "description": "moniker defines a human-readable name for the validator."
                                                        },
                                                        "identity": {
                                                            "type": "string",
                                                            "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
                                                        },
                                                        "website": {
                                                            "type": "string",
                                                            "description": "website defines an optional website link."
                                                        },
                                                        "security_contact": {
                                                            "type": "string",
                                                            "description": "security_contact defines an optional email for security contact."
                                                        },
                                                        "details": {
                                                            "type": "string",
                                                            "description": "details define other optional details."
                                                        }
                                                    },
                                                    "description": "description defines the description terms for the validator."
                                                },
                                                "unbonding_height": {
                                                    "type": "string",
                                                    "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.",
                                                    "format": "int64"
                                                },
                                                "unbonding_time": {
                                                    "type": "string",
                                                    "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",
                                                    "format": "date-time"
                                                },
                                                "commission": {
                                                    "type": "object",
                                                    "properties": {
                                                        "commission_rates": {
                                                            "type": "object",
                                                            "properties": {
                                                                "rate": {
                                                                    "type": "string",
                                                                    "description": "rate is the commission rate charged to delegators, as a fraction."
                                                                },
                                                                "max_rate": {
                                                                    "type": "string",
                                                                    "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
                                                                },
                                                                "max_change_rate": {
                                                                    "type": "string",
                                                                    "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
                                                                }
                                                            },
                                                            "description": "commission_rates defines the initial commission rates to be used for creating a validator."
                                                        },
                                                        "update_time": {
                                                            "type": "string",
                                                            "description": "update_time is the last time the commission rate was changed.",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "description": "commission defines the commission parameters."
                                                },
                                                "min_self_delegation": {
                                                    "type": "string",
                                                    "description": "min_self_delegation is the validator's self declared minimum self delegation."
                                                }
                                            },
                                            "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ValidatorDelegations queries delegate info for given validator.",
                "operationId": "CosmosStakingV1Beta1ValidatorDelegations",
                "parameters": [
                    {
                        "name": "validator_addr",
                        "in": "path",
                        "description": "validator_addr defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryValidatorDelegationsResponse is response type for the\nQuery/ValidatorDelegations RPC method",
                                    "type": "object",
                                    "properties": {
                                        "delegation_responses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "delegation": {
                                                        "type": "object",
                                                        "properties": {
                                                            "delegator_address": {
                                                                "type": "string",
                                                                "description": "delegator_address is the bech32-encoded address of the delegator."
                                                            },
                                                            "validator_address": {
                                                                "type": "string",
                                                                "description": "validator_address is the bech32-encoded address of the validator."
                                                            },
                                                            "shares": {
                                                                "type": "string",
                                                                "description": "shares define the delegation shares received."
                                                            }
                                                        },
                                                        "description": "Delegation represents the bond with tokens held by an account. It is\nowned by one delegator, and is associated with the voting power of one\nvalidator."
                                                    },
                                                    "balance": {
                                                        "type": "object",
                                                        "properties": {
                                                            "denom": {
                                                                "type": "string"
                                                            },
                                                            "amount": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                    }
                                                },
                                                "description": "DelegationResponse is equivalent to Delegation except that it contains a\nbalance in addition to shares which is more suitable for client responses."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Delegation queries delegate info for given validator delegator pair.",
                "operationId": "CosmosStakingV1Beta1Delegation",
                "parameters": [
                    {
                        "name": "validator_addr",
                        "in": "path",
                        "description": "validator_addr defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "delegation_response": {
                                            "type": "object",
                                            "properties": {
                                                "delegation": {
                                                    "type": "object",
                                                    "properties": {
                                                        "delegator_address": {
                                                            "type": "string",
                                                            "description": "delegator_address is the bech32-encoded address of the delegator."
                                                        },
                                                        "validator_address": {
                                                            "type": "string",
                                                            "description": "validator_address is the bech32-encoded address of the validator."
                                                        },
                                                        "shares": {
                                                            "type": "string",
                                                            "description": "shares define the delegation shares received."
                                                        }
                                                    },
                                                    "description": "Delegation represents the bond with tokens held by an account. It is\nowned by one delegator, and is associated with the voting power of one\nvalidator."
                                                },
                                                "balance": {
                                                    "type": "object",
                                                    "properties": {
                                                        "denom": {
                                                            "type": "string"
                                                        },
                                                        "amount": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
                                                }
                                            },
                                            "description": "DelegationResponse is equivalent to Delegation except that it contains a\nbalance in addition to shares which is more suitable for client responses."
                                        }
                                    },
                                    "description": "QueryDelegationResponse is response type for the Query/Delegation RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "UnbondingDelegation queries unbonding info for given validator delegator\npair.",
                "operationId": "CosmosStakingV1Beta1UnbondingDelegation",
                "parameters": [
                    {
                        "name": "validator_addr",
                        "in": "path",
                        "description": "validator_addr defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "delegator_addr",
                        "in": "path",
                        "description": "delegator_addr defines the delegator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unbond": {
                                            "type": "object",
                                            "properties": {
                                                "delegator_address": {
                                                    "type": "string",
                                                    "description": "delegator_address is the bech32-encoded address of the delegator."
                                                },
                                                "validator_address": {
                                                    "type": "string",
                                                    "description": "validator_address is the bech32-encoded address of the validator."
                                                },
                                                "entries": {
                                                    "type": "array",
                                                    "description": "entries are the unbonding delegation entries.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "creation_height": {
                                                                "type": "string",
                                                                "description": "creation_height is the height which the unbonding took place.",
                                                                "format": "int64"
                                                            },
                                                            "completion_time": {
                                                                "type": "string",
                                                                "description": "completion_time is the unix time for unbonding completion.",
                                                                "format": "date-time"
                                                            },
                                                            "initial_balance": {
                                                                "type": "string",
                                                                "description": "initial_balance defines the tokens initially scheduled to receive at completion."
                                                            },
                                                            "balance": {
                                                                "type": "string",
                                                                "description": "balance defines the tokens to receive at completion."
                                                            }
                                                        },
                                                        "description": "UnbondingDelegationEntry defines an unbonding object with relevant metadata."
                                                    }
                                                }
                                            },
                                            "description": "UnbondingDelegation stores all of a single delegator's unbonding bonds\nfor a single validator in an time-ordered list."
                                        }
                                    },
                                    "description": "QueryDelegationResponse is response type for the Query/UnbondingDelegation\nRPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ValidatorUnbondingDelegations queries unbonding delegations of a validator.",
                "operationId": "CosmosStakingV1Beta1ValidatorUnbondingDelegations",
                "parameters": [
                    {
                        "name": "validator_addr",
                        "in": "path",
                        "description": "validator_addr defines the validator address to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unbonding_responses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "delegator_address": {
                                                        "type": "string",
                                                        "description": "delegator_address is the bech32-encoded address of the delegator."
                                                    },
                                                    "validator_address": {
                                                        "type": "string",
                                                        "description": "validator_address is the bech32-encoded address of the validator."
                                                    },
                                                    "entries": {
                                                        "type": "array",
                                                        "description": "entries are the unbonding delegation entries.",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "creation_height": {
                                                                    "type": "string",
                                                                    "description": "creation_height is the height which the unbonding took place.",
                                                                    "format": "int64"
                                                                },
                                                                "completion_time": {
                                                                    "type": "string",
                                                                    "description": "completion_time is the unix time for unbonding completion.",
                                                                    "format": "date-time"
                                                                },
                                                                "initial_balance": {
                                                                    "type": "string",
                                                                    "description": "initial_balance defines the tokens initially scheduled to receive at completion."
                                                                },
                                                                "balance": {
                                                                    "type": "string",
                                                                    "description": "balance defines the tokens to receive at completion."
                                                                }
                                                            },
                                                            "description": "UnbondingDelegationEntry defines an unbonding object with relevant metadata."
                                                        }
                                                    }
                                                },
                                                "description": "UnbondingDelegation stores all of a single delegator's unbonding bonds\nfor a single validator in an time-ordered list."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryValidatorUnbondingDelegationsResponse is response type for the\nQuery/ValidatorUnbondingDelegations RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/tx/v1beta1/simulate": {
            "post": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Simulate simulates executing a transaction for estimating gas usage.",
                "operationId": "CosmosTxV1Beta1Simulate",
                "requestBody": {
                    "description": "SimulateRequest is the request type for the Service.Simulate\nRPC method.",
                    "content": {},
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "gas_info": {
                                            "type": "object",
                                            "properties": {
                                                "gas_wanted": {
                                                    "type": "string",
                                                    "description": "GasWanted is the maximum units of work we allow this tx to perform.",
                                                    "format": "uint64"
                                                },
                                                "gas_used": {
                                                    "type": "string",
                                                    "description": "GasUsed is the amount of gas actually consumed.",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "gas_info is the information about gas used in the simulation."
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "description": "Data is any data returned from message or handler execution. It MUST be\nlength prefixed in order to separate data from multiple message executions.",
                                                    "format": "byte"
                                                },
                                                "log": {
                                                    "type": "string",
                                                    "description": "Log contains the log information from message or handler execution."
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "description": "Events contains a slice of Event objects that were emitted during message\nor handler execution.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "key": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        },
                                                                        "value": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        },
                                                                        "index": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "description": "EventAttribute is a single key-value pair, associated with an event."
                                                                }
                                                            }
                                                        },
                                                        "description": "Event allows application developers to attach additional information to\nResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\nLater, transactions may be queried using these events."
                                                    }
                                                }
                                            },
                                            "description": "result is the result of the simulation."
                                        }
                                    },
                                    "description": "SimulateResponse is the response type for the\nService.SimulateRPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/cosmos/tx/v1beta1/txs": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetTxsEvent fetches txs by event.",
                "operationId": "CosmosTxV1Beta1GetTxsEvent",
                "parameters": [
                    {
                        "name": "events",
                        "in": "query",
                        "description": "events is the list of transaction event type.",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": " - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending order",
                        "schema": {
                            "type": "string",
                            "default": "ORDER_BY_UNSPECIFIED",
                            "enum": [
                                "ORDER_BY_UNSPECIFIED",
                                "ORDER_BY_ASC",
                                "ORDER_BY_DESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {}
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "BroadcastTx broadcast transaction.",
                "operationId": "CosmosTxV1Beta1BroadcastTx",
                "requestBody": {
                    "description": "BroadcastTxRequest is the request type for the Service.BroadcastTxRequest\nRPC method.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tx_bytes": {
                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                        "type": "string",
                                        "description": "tx_bytes is the raw transaction.",
                                        "format": "byte"
                                    },
                                    "mode": {
                                        "type": "string",
                                        "description": "BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for\nthe tx to be committed in a block.\n - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for\na CheckTx execution response only.\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns\nimmediately.",
                                        "default": "BROADCAST_MODE_UNSPECIFIED",
                                        "enum": [
                                            "BROADCAST_MODE_UNSPECIFIED",
                                            "BROADCAST_MODE_BLOCK",
                                            "BROADCAST_MODE_SYNC",
                                            "BROADCAST_MODE_ASYNC"
                                        ]
                                    }
                                },
                                "description": "BroadcastTxRequest is the request type for the Service.BroadcastTxRequest\nRPC method."
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tx_response": {
                                            "type": "object",
                                            "properties": {
                                                "height": {
                                                    "title": "The block height",
                                                    "type": "string",
                                                    "format": "int64"
                                                },
                                                "txhash": {
                                                    "type": "string",
                                                    "description": "The transaction hash."
                                                },
                                                "codespace": {
                                                    "title": "Namespace for the Code",
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer",
                                                    "description": "Response code.",
                                                    "format": "int64"
                                                },
                                                "data": {
                                                    "type": "string",
                                                    "description": "Result bytes, if any."
                                                },
                                                "raw_log": {
                                                    "type": "string",
                                                    "description": "The output of the application's logger (raw string). May be\nnon-deterministic."
                                                },
                                                "logs": {
                                                    "type": "array",
                                                    "description": "The output of the application's logger (typed). May be non-deterministic.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "msg_index": {
                                                                "type": "integer",
                                                                "format": "int64"
                                                            },
                                                            "log": {
                                                                "type": "string"
                                                            },
                                                            "events": {
                                                                "type": "array",
                                                                "description": "Events contains a slice of Event objects that were emitted during some\nexecution.",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "description": "Attribute defines an attribute wrapper where the key and value are\nstrings instead of raw bytes."
                                                                            }
                                                                        }
                                                                    },
                                                                    "description": "StringEvent defines en Event object wrapper where all the attributes\ncontain key/value pairs that are strings instead of raw bytes."
                                                                }
                                                            }
                                                        },
                                                        "description": "ABCIMessageLog defines a structure containing an indexed tx ABCI message log."
                                                    }
                                                },
                                                "info": {
                                                    "type": "string",
                                                    "description": "Additional information. May be non-deterministic."
                                                },
                                                "gas_wanted": {
                                                    "type": "string",
                                                    "description": "Amount of gas requested for transaction.",
                                                    "format": "int64"
                                                },
                                                "gas_used": {
                                                    "type": "string",
                                                    "description": "Amount of gas consumed by transaction.",
                                                    "format": "int64"
                                                },
                                                "tx": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "description": "Time of the previous block. For heights > 1, it's the weighted median of\nthe timestamps of the valid votes in the block.LastCommit. For height == 1,\nit's genesis time."
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "description": "Events defines all the events emitted by processing a transaction. Note,\nthese events include those emitted by processing all the messages and those\nemitted from the ante handler. Whereas Logs contains the events, with\nadditional metadata, emitted only by processing the messages.\n\nSince: cosmos-sdk 0.42.11, 0.44.5, 0.45",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "attributes": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "key": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        },
                                                                        "value": {
                                                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                            "type": "string",
                                                                            "format": "byte"
                                                                        },
                                                                        "index": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "description": "EventAttribute is a single key-value pair, associated with an event."
                                                                }
                                                            }
                                                        },
                                                        "description": "Event allows application developers to attach additional information to\nResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\nLater, transactions may be queried using these events."
                                                    }
                                                }
                                            },
                                            "description": "TxResponse defines a structure containing relevant tx data and metadata. The\ntags are stringified and the log is JSON decoded."
                                        }
                                    },
                                    "description": "BroadcastTxResponse is the response type for the\nService.BroadcastTx method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/cosmos/tx/v1beta1/txs/block/{height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetBlockWithTxs fetches a block with decoded txs.",
                "description": "Since: cosmos-sdk 0.45.2",
                "operationId": "CosmosTxV1Beta1GetBlockWithTxs",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "description": "height is the height of the block to query.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {}
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/tx/v1beta1/txs/{hash}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "GetTx fetches a tx by hash.",
                "operationId": "CosmosTxV1Beta1GetTx",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash is the tx hash to query, encoded as a hex string.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {}
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/upgrade/v1beta1/applied_plan/{name}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "AppliedPlan queries a previously applied upgrade plan by its name.",
                "operationId": "CosmosUpgradeV1Beta1AppliedPlan",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name is the name of the applied plan to query for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "height": {
                                            "type": "string",
                                            "description": "height is the block height at which the plan was applied.",
                                            "format": "int64"
                                        }
                                    },
                                    "description": "QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/upgrade/v1beta1/current_plan": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "CurrentPlan queries the current upgrade plan.",
                "operationId": "CosmosUpgradeV1Beta1CurrentPlan",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "plan": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "description": "Sets the name for the upgrade. This name will be used by the upgraded\nversion of the software to apply any special \"on-upgrade\" commands during\nthe first BeginBlock method after the upgrade is applied. It is also used\nto detect whether a software version can handle a given upgrade. If no\nupgrade handler with this name has been set in the software, it will be\nassumed that the software is out-of-date when the upgrade Time or Height is\nreached and the software will exit."
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic\nhas been removed from the SDK.\nIf this field is not empty, an error will be thrown.",
                                                    "format": "date-time"
                                                },
                                                "height": {
                                                    "type": "string",
                                                    "description": "The height at which the upgrade must be performed.\nOnly used if Time is not set.",
                                                    "format": "int64"
                                                },
                                                "info": {
                                                    "title": "Any application specific upgrade info to be included on-chain\nsuch as a git commit that validators could automatically upgrade to",
                                                    "type": "string"
                                                },
                                                "upgraded_client_state": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                }
                                            },
                                            "description": "plan is the current upgrade plan."
                                        }
                                    },
                                    "description": "QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/upgrade/v1beta1/module_versions": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ModuleVersions queries the list of module versions from state.",
                "description": "Since: cosmos-sdk 0.43",
                "operationId": "CosmosUpgradeV1Beta1ModuleVersions",
                "parameters": [
                    {
                        "name": "module_name",
                        "in": "query",
                        "description": "module_name is a field to query a specific module\nconsensus version from state. Leaving this empty will\nfetch the full list of module versions from state",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "module_versions": {
                                            "type": "array",
                                            "description": "module_versions is a list of module names with their consensus versions.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "title": "name of the app module",
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "title": "consensus version of the app module",
                                                        "type": "string",
                                                        "format": "uint64"
                                                    }
                                                },
                                                "description": "ModuleVersion specifies a module and its consensus version.\n\nSince: cosmos-sdk 0.43"
                                            }
                                        }
                                    },
                                    "description": "QueryModuleVersionsResponse is the response type for the Query/ModuleVersions\nRPC method.\n\nSince: cosmos-sdk 0.43"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "UpgradedConsensusState queries the consensus state that will serve\nas a trusted kernel for the next version of this chain. It will only be\nstored at the last height of this chain.\nUpgradedConsensusState RPC not supported with legacy querier\nThis rpc is deprecated now that IBC has its own replacement\n(https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)",
                "operationId": "CosmosUpgradeV1Beta1UpgradedConsensusState",
                "parameters": [
                    {
                        "name": "last_height",
                        "in": "path",
                        "description": "last height of the current chain must be sent in request\nas this is the height under which next consensus state is stored",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "upgraded_consensus_state": {
                                            "title": "Since: cosmos-sdk 0.43",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        }
                                    },
                                    "description": "QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState\nRPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/code": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Codes gets the metadata for all stored wasm codes",
                "operationId": "CosmwasmWasmV1Codes",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryCodesResponse is the response type for the Query/Codes RPC method",
                                    "type": "object",
                                    "properties": {
                                        "code_infos": {
                                            "type": "array",
                                            "items": {
                                                "title": "CodeInfoResponse contains code meta data from CodeInfo",
                                                "type": "object",
                                                "properties": {
                                                    "code_id": {
                                                        "type": "string",
                                                        "format": "uint64"
                                                    },
                                                    "creator": {
                                                        "type": "string"
                                                    },
                                                    "data_hash": {
                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                        "type": "string",
                                                        "format": "byte"
                                                    },
                                                    "instantiate_permission": {
                                                        "type": "object",
                                                        "properties": {
                                                            "permission": {
                                                                "title": "AccessType permission types",
                                                                "type": "string",
                                                                "description": "- ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value\n - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden\n - ACCESS_TYPE_ONLY_ADDRESS: AccessTypeOnlyAddress restricted to an address\n - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted",
                                                                "default": "ACCESS_TYPE_UNSPECIFIED",
                                                                "enum": [
                                                                    "ACCESS_TYPE_UNSPECIFIED",
                                                                    "ACCESS_TYPE_NOBODY",
                                                                    "ACCESS_TYPE_ONLY_ADDRESS",
                                                                    "ACCESS_TYPE_EVERYBODY"
                                                                ]
                                                            },
                                                            "address": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "description": "AccessConfig access control type."
                                                    }
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/code/{code_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Code gets the binary code and metadata for a singe wasm code",
                "operationId": "CosmwasmWasmV1Code",
                "parameters": [
                    {
                        "name": "code_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryCodeResponse is the response type for the Query/Code RPC method",
                                    "type": "object",
                                    "properties": {
                                        "code_info": {
                                            "title": "CodeInfoResponse contains code meta data from CodeInfo",
                                            "type": "object",
                                            "properties": {
                                                "code_id": {
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "creator": {
                                                    "type": "string"
                                                },
                                                "data_hash": {
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "instantiate_permission": {
                                                    "type": "object",
                                                    "properties": {
                                                        "permission": {
                                                            "title": "AccessType permission types",
                                                            "type": "string",
                                                            "description": "- ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty value\n - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden\n - ACCESS_TYPE_ONLY_ADDRESS: AccessTypeOnlyAddress restricted to an address\n - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted",
                                                            "default": "ACCESS_TYPE_UNSPECIFIED",
                                                            "enum": [
                                                                "ACCESS_TYPE_UNSPECIFIED",
                                                                "ACCESS_TYPE_NOBODY",
                                                                "ACCESS_TYPE_ONLY_ADDRESS",
                                                                "ACCESS_TYPE_EVERYBODY"
                                                            ]
                                                        },
                                                        "address": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "description": "AccessConfig access control type."
                                                }
                                            }
                                        },
                                        "data": {
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/code/{code_id}/contracts": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ContractsByCode lists all smart contracts for a code id",
                "operationId": "CosmwasmWasmV1ContractsByCode",
                "parameters": [
                    {
                        "name": "code_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryContractsByCodeResponse is the response type for the\nQuery/ContractsByCode RPC method",
                                    "type": "object",
                                    "properties": {
                                        "contracts": {
                                            "title": "contracts are a set of contract addresses",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/codes/pinned": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "PinnedCodes gets the pinned code ids",
                "operationId": "CosmwasmWasmV1PinnedCodes",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryPinnedCodesResponse is the response type for the\nQuery/PinnedCodes RPC method",
                                    "type": "object",
                                    "properties": {
                                        "code_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uint64"
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/contract/{address}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ContractInfo gets the contract meta data",
                "operationId": "CosmwasmWasmV1ContractInfo",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address of the contract to query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryContractInfoResponse is the response type for the Query/ContractInfo RPC\nmethod",
                                    "type": "object",
                                    "properties": {
                                        "address": {
                                            "title": "address is the address of the contract",
                                            "type": "string"
                                        },
                                        "contract_info": {
                                            "title": "ContractInfo stores a WASM contract instance",
                                            "type": "object",
                                            "properties": {
                                                "code_id": {
                                                    "title": "CodeID is the reference to the stored Wasm code",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "creator": {
                                                    "title": "Creator address who initially instantiated the contract",
                                                    "type": "string"
                                                },
                                                "admin": {
                                                    "title": "Admin is an optional address that can execute migrations",
                                                    "type": "string"
                                                },
                                                "label": {
                                                    "type": "string",
                                                    "description": "Label is optional metadata to be stored with a contract instance."
                                                },
                                                "created": {
                                                    "title": "Created Tx position when the contract was instantiated.\nThis data should kept internal and not be exposed via query results. Just\nuse for sorting",
                                                    "type": "object",
                                                    "properties": {
                                                        "block_height": {
                                                            "title": "BlockHeight is the block the contract was created at",
                                                            "type": "string",
                                                            "format": "uint64"
                                                        },
                                                        "tx_index": {
                                                            "title": "TxIndex is a monotonic counter within the block (actual transaction index,\nor gas consumed)",
                                                            "type": "string",
                                                            "format": "uint64"
                                                        }
                                                    },
                                                    "description": "AbsoluteTxPosition is a unique transaction position that allows for global\nordering of transactions."
                                                },
                                                "ibc_port_id": {
                                                    "type": "string"
                                                },
                                                "extension": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/contract/{address}/history": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ContractHistory gets the contract code history",
                "operationId": "CosmwasmWasmV1ContractHistory",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address of the contract to query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryContractHistoryResponse is the response type for the\nQuery/ContractHistory RPC method",
                                    "type": "object",
                                    "properties": {
                                        "entries": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "operation": {
                                                        "title": "ContractCodeHistoryOperationType actions that caused a code change",
                                                        "type": "string",
                                                        "description": "- CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED: ContractCodeHistoryOperationTypeUnspecified placeholder for empty value\n - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation\n - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration\n - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data",
                                                        "default": "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED",
                                                        "enum": [
                                                            "CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED",
                                                            "CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT",
                                                            "CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE",
                                                            "CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS"
                                                        ]
                                                    },
                                                    "code_id": {
                                                        "title": "CodeID is the reference to the stored WASM code",
                                                        "type": "string",
                                                        "format": "uint64"
                                                    },
                                                    "updated": {
                                                        "type": "object",
                                                        "properties": {
                                                            "block_height": {
                                                                "title": "BlockHeight is the block the contract was created at",
                                                                "type": "string",
                                                                "format": "uint64"
                                                            },
                                                            "tx_index": {
                                                                "title": "TxIndex is a monotonic counter within the block (actual transaction index,\nor gas consumed)",
                                                                "type": "string",
                                                                "format": "uint64"
                                                            }
                                                        },
                                                        "description": "Updated Tx position when the operation was executed."
                                                    },
                                                    "msg": {
                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                        "type": "string",
                                                        "format": "byte"
                                                    }
                                                },
                                                "description": "ContractCodeHistoryEntry metadata to a contract."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/contract/{address}/raw/{query_data}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "RawContractState gets single key from the raw store data of a contract",
                "operationId": "CosmwasmWasmV1RawContractState",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address of the contract",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_data",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryRawContractStateResponse is the response type for the\nQuery/RawContractState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "title": "Data contains the raw store data",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/contract/{address}/smart/{query_data}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "SmartContractState get smart query result from the contract",
                "operationId": "CosmwasmWasmV1SmartContractState",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address of the contract",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_data",
                        "in": "path",
                        "description": "QueryData contains the query data passed to the contract",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QuerySmartContractStateResponse is the response type for the\nQuery/SmartContractState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "title": "Data contains the json data returned from the smart contract",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cosmwasm/wasm/v1/contract/{address}/state": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "AllContractState gets all raw store data for a single contract",
                "operationId": "CosmwasmWasmV1AllContractState",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address is the address of the contract",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pagination.reverse",
                        "in": "query",
                        "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryAllContractStateResponse is the response type for the\nQuery/AllContractState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "models": {
                                            "type": "array",
                                            "items": {
                                                "title": "Model is a struct that holds a KV pair",
                                                "type": "object",
                                                "properties": {
                                                    "key": {
                                                        "title": "hex-encode key to read it better (this is often ascii)",
                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                        "type": "string",
                                                        "format": "byte"
                                                    },
                                                    "value": {
                                                        "title": "base64-encode raw value",
                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                        "type": "string",
                                                        "format": "byte"
                                                    }
                                                }
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/apps/interchain_accounts/controller/v1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries all parameters of the ICA controller submodule.",
                "operationId": "IbcApplicationsInterchainAccountsControllerV1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "controller_enabled": {
                                                    "type": "boolean",
                                                    "description": "controller_enabled enables or disables the controller submodule."
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/apps/interchain_accounts/host/v1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries all parameters of the ICA host submodule.",
                "operationId": "IbcApplicationsInterchainAccountsHostV1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "host_enabled": {
                                                    "type": "boolean",
                                                    "description": "host_enabled enables or disables the host submodule."
                                                },
                                                "allow_messages": {
                                                    "type": "array",
                                                    "description": "allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/apps/transfer/v1/denom_hashes/{trace}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DenomHash queries a denomination hash information.",
                "operationId": "IbcApplicationsTransferV1DenomHash",
                "parameters": [
                    {
                        "name": "trace",
                        "in": "path",
                        "description": "The denomination trace ([port_id]/[channel_id])+/[denom]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hash": {
                                            "type": "string",
                                            "description": "hash (in hex format) of the denomination trace information."
                                        }
                                    },
                                    "description": "QueryDenomHashResponse is the response type for the Query/DenomHash RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/apps/transfer/v1/denom_traces": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DenomTraces queries all denomination traces.",
                "operationId": "IbcApplicationsTransferV1DenomTraces",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "denom_traces": {
                                            "type": "array",
                                            "description": "denom_traces returns all denominations trace information.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "description": "path defines the chain of port/channel identifiers used for tracing the\nsource of the fungible token."
                                                    },
                                                    "base_denom": {
                                                        "type": "string",
                                                        "description": "base denomination of the relayed fungible token."
                                                    }
                                                },
                                                "description": "DenomTrace contains the base denomination for ICS20 fungible tokens and the\nsource tracing information path."
                                            }
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "pagination defines the pagination in the response."
                                        }
                                    },
                                    "description": "QueryConnectionsResponse is the response type for the Query/DenomTraces RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/apps/transfer/v1/denom_traces/{hash}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "DenomTrace queries a denomination trace information.",
                "operationId": "IbcApplicationsTransferV1DenomTrace",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash (in hex format) of the denomination trace information.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "denom_trace": {
                                            "type": "object",
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "description": "path defines the chain of port/channel identifiers used for tracing the\nsource of the fungible token."
                                                },
                                                "base_denom": {
                                                    "type": "string",
                                                    "description": "base denomination of the relayed fungible token."
                                                }
                                            },
                                            "description": "DenomTrace contains the base denomination for ICS20 fungible tokens and the\nsource tracing information path."
                                        }
                                    },
                                    "description": "QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/apps/transfer/v1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Params queries all parameters of the ibc-transfer module.",
                "operationId": "IbcApplicationsTransferV1Params",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "send_enabled": {
                                                    "type": "boolean",
                                                    "description": "send_enabled enables or disables all cross-chain token transfers from this\nchain."
                                                },
                                                "receive_enabled": {
                                                    "type": "boolean",
                                                    "description": "receive_enabled enables or disables all cross-chain token transfers to this\nchain."
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Channels queries all the IBC channels of a chain.",
                "operationId": "IbcCoreChannelV1Channels",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "channels": {
                                            "type": "array",
                                            "description": "list of stored channels of the chain.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "state": {
                                                        "title": "current state of the channel end",
                                                        "type": "string",
                                                        "description": "State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.",
                                                        "default": "STATE_UNINITIALIZED_UNSPECIFIED",
                                                        "enum": [
                                                            "STATE_UNINITIALIZED_UNSPECIFIED",
                                                            "STATE_INIT",
                                                            "STATE_TRYOPEN",
                                                            "STATE_OPEN",
                                                            "STATE_CLOSED"
                                                        ]
                                                    },
                                                    "ordering": {
                                                        "title": "whether the channel is ordered or unordered",
                                                        "type": "string",
                                                        "description": "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent",
                                                        "default": "ORDER_NONE_UNSPECIFIED",
                                                        "enum": [
                                                            "ORDER_NONE_UNSPECIFIED",
                                                            "ORDER_UNORDERED",
                                                            "ORDER_ORDERED"
                                                        ]
                                                    },
                                                    "counterparty": {
                                                        "title": "counterparty channel end",
                                                        "type": "object",
                                                        "properties": {
                                                            "port_id": {
                                                                "type": "string",
                                                                "description": "port on the counterparty chain which owns the other end of the channel."
                                                            },
                                                            "channel_id": {
                                                                "title": "channel end on the counterparty chain",
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "connection_hops": {
                                                        "title": "list of connection identifiers, in order, along which packets sent on\nthis channel will travel",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "version": {
                                                        "title": "opaque channel version, which is agreed upon during the handshake",
                                                        "type": "string"
                                                    },
                                                    "port_id": {
                                                        "title": "port identifier",
                                                        "type": "string"
                                                    },
                                                    "channel_id": {
                                                        "title": "channel identifier",
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "IdentifiedChannel defines a channel with additional port and channel\nidentifier fields."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    },
                                    "description": "QueryChannelsResponse is the response type for the Query/Channels RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Channel queries an IBC Channel.",
                "operationId": "IbcCoreChannelV1Channel",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "title": "channel associated with the request identifiers",
                                            "type": "object",
                                            "properties": {
                                                "state": {
                                                    "title": "current state of the channel end",
                                                    "type": "string",
                                                    "description": "State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.",
                                                    "default": "STATE_UNINITIALIZED_UNSPECIFIED",
                                                    "enum": [
                                                        "STATE_UNINITIALIZED_UNSPECIFIED",
                                                        "STATE_INIT",
                                                        "STATE_TRYOPEN",
                                                        "STATE_OPEN",
                                                        "STATE_CLOSED"
                                                    ]
                                                },
                                                "ordering": {
                                                    "title": "whether the channel is ordered or unordered",
                                                    "type": "string",
                                                    "description": "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent",
                                                    "default": "ORDER_NONE_UNSPECIFIED",
                                                    "enum": [
                                                        "ORDER_NONE_UNSPECIFIED",
                                                        "ORDER_UNORDERED",
                                                        "ORDER_ORDERED"
                                                    ]
                                                },
                                                "counterparty": {
                                                    "title": "counterparty channel end",
                                                    "type": "object",
                                                    "properties": {
                                                        "port_id": {
                                                            "type": "string",
                                                            "description": "port on the counterparty chain which owns the other end of the channel."
                                                        },
                                                        "channel_id": {
                                                            "title": "channel end on the counterparty chain",
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "connection_hops": {
                                                    "title": "list of connection identifiers, in order, along which packets sent on\nthis channel will travel",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "version": {
                                                    "title": "opaque channel version, which is agreed upon during the handshake",
                                                    "type": "string"
                                                }
                                            },
                                            "description": "Channel defines pipeline for exactly-once packet delivery between specific\nmodules on separate blockchains, which has at least one end capable of\nsending packets and one end capable of receiving packets."
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    },
                                    "description": "QueryChannelResponse is the response type for the Query/Channel RPC method.\nBesides the Channel end, it includes a proof and the height from which the\nproof was retrieved."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ChannelClientState queries for the client state for the channel associated\nwith the provided channel identifiers.",
                "operationId": "IbcCoreChannelV1ChannelClientState",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryChannelClientStateResponse is the Response type for the\nQuery/QueryChannelClientState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "identified_client_state": {
                                            "title": "client state associated with the channel",
                                            "type": "object",
                                            "properties": {
                                                "client_id": {
                                                    "title": "client identifier",
                                                    "type": "string"
                                                },
                                                "client_state": {
                                                    "title": "client state",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                }
                                            },
                                            "description": "IdentifiedClientState defines a client state with an additional client\nidentifier field."
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ChannelConsensusState queries for the consensus state for the channel\nassociated with the provided channel identifiers.",
                "operationId": "IbcCoreChannelV1ChannelConsensusState",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revision_number",
                        "in": "path",
                        "description": "revision number of the consensus state",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "revision_height",
                        "in": "path",
                        "description": "revision height of the consensus state",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryChannelClientStateResponse is the Response type for the\nQuery/QueryChannelClientState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "consensus_state": {
                                            "title": "consensus state associated with the channel",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        },
                                        "client_id": {
                                            "title": "client ID associated with the consensus state",
                                            "type": "string"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "NextSequenceReceive returns the next receive sequence for a given channel.",
                "operationId": "IbcCoreChannelV1NextSequenceReceive",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QuerySequenceResponse is the request type for the\nQuery/QueryNextSequenceReceiveResponse RPC method",
                                    "type": "object",
                                    "properties": {
                                        "next_sequence_receive": {
                                            "title": "next sequence receive number",
                                            "type": "string",
                                            "format": "uint64"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "PacketAcknowledgements returns all the packet acknowledgements associated\nwith a channel.",
                "operationId": "IbcCoreChannelV1PacketAcknowledgements",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "packet_commitment_sequences",
                        "in": "query",
                        "description": "list of packet sequences",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uint64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryPacketAcknowledgemetsResponse is the request type for the\nQuery/QueryPacketAcknowledgements RPC method",
                                    "type": "object",
                                    "properties": {
                                        "acknowledgements": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "port_id": {
                                                        "type": "string",
                                                        "description": "channel port identifier."
                                                    },
                                                    "channel_id": {
                                                        "type": "string",
                                                        "description": "channel unique identifier."
                                                    },
                                                    "sequence": {
                                                        "type": "string",
                                                        "description": "packet sequence.",
                                                        "format": "uint64"
                                                    },
                                                    "data": {
                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                        "type": "string",
                                                        "description": "embedded data that represents packet state.",
                                                        "format": "byte"
                                                    }
                                                },
                                                "description": "PacketState defines the generic type necessary to retrieve and store\npacket commitments, acknowledgements, and receipts.\nCaller is responsible for knowing the context necessary to interpret this\nstate as a commitment, acknowledgement, or a receipt."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "PacketAcknowledgement queries a stored packet acknowledgement hash.",
                "operationId": "IbcCoreChannelV1PacketAcknowledgement",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "description": "packet sequence",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryPacketAcknowledgementResponse defines the client query response for a\npacket which also includes a proof and the height from which the\nproof was retrieved",
                                    "type": "object",
                                    "properties": {
                                        "acknowledgement": {
                                            "title": "packet associated with the request fields",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "PacketCommitments returns all the packet commitments hashes associated\nwith a channel.",
                "operationId": "IbcCoreChannelV1PacketCommitments",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryPacketCommitmentsResponse is the request type for the\nQuery/QueryPacketCommitments RPC method",
                                    "type": "object",
                                    "properties": {
                                        "commitments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "port_id": {
                                                        "type": "string",
                                                        "description": "channel port identifier."
                                                    },
                                                    "channel_id": {
                                                        "type": "string",
                                                        "description": "channel unique identifier."
                                                    },
                                                    "sequence": {
                                                        "type": "string",
                                                        "description": "packet sequence.",
                                                        "format": "uint64"
                                                    },
                                                    "data": {
                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                        "type": "string",
                                                        "description": "embedded data that represents packet state.",
                                                        "format": "byte"
                                                    }
                                                },
                                                "description": "PacketState defines the generic type necessary to retrieve and store\npacket commitments, acknowledgements, and receipts.\nCaller is responsible for knowing the context necessary to interpret this\nstate as a commitment, acknowledgement, or a receipt."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "UnreceivedAcks returns all the unreceived IBC acknowledgements associated\nwith a channel and sequences.",
                "operationId": "IbcCoreChannelV1UnreceivedAcks",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "packet_ack_sequences",
                        "in": "path",
                        "description": "list of acknowledgement sequences",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "minItems": 1,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uint64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryUnreceivedAcksResponse is the response type for the\nQuery/UnreceivedAcks RPC method",
                                    "type": "object",
                                    "properties": {
                                        "sequences": {
                                            "title": "list of unreceived acknowledgement sequences",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uint64"
                                            }
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "UnreceivedPackets returns all the unreceived IBC packets associated with a\nchannel and sequences.",
                "operationId": "IbcCoreChannelV1UnreceivedPackets",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "packet_commitment_sequences",
                        "in": "path",
                        "description": "list of packet sequences",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "minItems": 1,
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uint64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryUnreceivedPacketsResponse is the response type for the\nQuery/UnreceivedPacketCommitments RPC method",
                                    "type": "object",
                                    "properties": {
                                        "sequences": {
                                            "title": "list of unreceived packet sequences",
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uint64"
                                            }
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "PacketCommitment queries a stored packet commitment hash.",
                "operationId": "IbcCoreChannelV1PacketCommitment",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "description": "packet sequence",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryPacketCommitmentResponse defines the client query response for a packet\nwhich also includes a proof and the height from which the proof was\nretrieved",
                                    "type": "object",
                                    "properties": {
                                        "commitment": {
                                            "title": "packet associated with the request fields",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "PacketReceipt queries if a given packet sequence has been received on the\nqueried chain",
                "operationId": "IbcCoreChannelV1PacketReceipt",
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "channel unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port_id",
                        "in": "path",
                        "description": "port unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "description": "packet sequence",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryPacketReceiptResponse defines the client query response for a packet\nreceipt which also includes a proof, and the height from which the proof was\nretrieved",
                                    "type": "object",
                                    "properties": {
                                        "received": {
                                            "title": "success flag for if receipt exists",
                                            "type": "boolean"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/channel/v1/connections/{connection}/channels": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ConnectionChannels queries all the channels associated with a connection\nend.",
                "operationId": "IbcCoreChannelV1ConnectionChannels",
                "parameters": [
                    {
                        "name": "connection",
                        "in": "path",
                        "description": "connection unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryConnectionChannelsResponse is the Response type for the\nQuery/QueryConnectionChannels RPC method",
                                    "type": "object",
                                    "properties": {
                                        "channels": {
                                            "type": "array",
                                            "description": "list of channels associated with a connection.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "state": {
                                                        "title": "current state of the channel end",
                                                        "type": "string",
                                                        "description": "State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.",
                                                        "default": "STATE_UNINITIALIZED_UNSPECIFIED",
                                                        "enum": [
                                                            "STATE_UNINITIALIZED_UNSPECIFIED",
                                                            "STATE_INIT",
                                                            "STATE_TRYOPEN",
                                                            "STATE_OPEN",
                                                            "STATE_CLOSED"
                                                        ]
                                                    },
                                                    "ordering": {
                                                        "title": "whether the channel is ordered or unordered",
                                                        "type": "string",
                                                        "description": "- ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent",
                                                        "default": "ORDER_NONE_UNSPECIFIED",
                                                        "enum": [
                                                            "ORDER_NONE_UNSPECIFIED",
                                                            "ORDER_UNORDERED",
                                                            "ORDER_ORDERED"
                                                        ]
                                                    },
                                                    "counterparty": {
                                                        "title": "counterparty channel end",
                                                        "type": "object",
                                                        "properties": {
                                                            "port_id": {
                                                                "type": "string",
                                                                "description": "port on the counterparty chain which owns the other end of the channel."
                                                            },
                                                            "channel_id": {
                                                                "title": "channel end on the counterparty chain",
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "connection_hops": {
                                                        "title": "list of connection identifiers, in order, along which packets sent on\nthis channel will travel",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "version": {
                                                        "title": "opaque channel version, which is agreed upon during the handshake",
                                                        "type": "string"
                                                    },
                                                    "port_id": {
                                                        "title": "port identifier",
                                                        "type": "string"
                                                    },
                                                    "channel_id": {
                                                        "title": "channel identifier",
                                                        "type": "string"
                                                    }
                                                },
                                                "description": "IdentifiedChannel defines a channel with additional port and channel\nidentifier fields."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/client/v1/params": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ClientParams queries all parameters of the ibc client.",
                "operationId": "IbcCoreClientV1ClientParams",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "params": {
                                            "type": "object",
                                            "properties": {
                                                "allowed_clients": {
                                                    "type": "array",
                                                    "description": "allowed_clients defines the list of allowed client state types.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "description": "params defines the parameters of the module."
                                        }
                                    },
                                    "description": "QueryClientParamsResponse is the response type for the Query/ClientParams RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/client_states": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ClientStates queries all the IBC light clients of a chain.",
                "operationId": "IbcCoreClientV1ClientStates",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "client_states": {
                                            "type": "array",
                                            "description": "list of stored ClientStates of the chain.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "client_id": {
                                                        "title": "client identifier",
                                                        "type": "string"
                                                    },
                                                    "client_state": {
                                                        "title": "client state",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    }
                                                },
                                                "description": "IdentifiedClientState defines a client state with an additional client\nidentifier field."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        }
                                    },
                                    "description": "QueryClientStatesResponse is the response type for the Query/ClientStates RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/client_states/{client_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ClientState queries an IBC light client.",
                "operationId": "IbcCoreClientV1ClientState",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "client state unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "client_state": {
                                            "title": "client state associated with the request identifier",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    },
                                    "description": "QueryClientStateResponse is the response type for the Query/ClientState RPC\nmethod. Besides the client state, it includes a proof and the height from\nwhich the proof was retrieved."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/client_status/{client_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Status queries the status of an IBC client.",
                "operationId": "IbcCoreClientV1ClientStatus",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "client unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "description": "QueryClientStatusResponse is the response type for the Query/ClientStatus RPC\nmethod. It returns the current status of the IBC client."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/consensus_states/{client_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ConsensusStates queries all the consensus state associated with a given\nclient.",
                "operationId": "IbcCoreClientV1ConsensusStates",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "client identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryConsensusStatesResponse is the response type for the\nQuery/ConsensusStates RPC method",
                                    "type": "object",
                                    "properties": {
                                        "consensus_states": {
                                            "title": "consensus states associated with the identifier",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "height": {
                                                        "title": "consensus state height",
                                                        "type": "object",
                                                        "properties": {
                                                            "revision_number": {
                                                                "title": "the revision that the client is currently on",
                                                                "type": "string",
                                                                "format": "uint64"
                                                            },
                                                            "revision_height": {
                                                                "title": "the height within the given revision",
                                                                "type": "string",
                                                                "format": "uint64"
                                                            }
                                                        },
                                                        "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                                    },
                                                    "consensus_state": {
                                                        "title": "consensus state",
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "object"
                                                        },
                                                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                    }
                                                },
                                                "description": "ConsensusStateWithHeight defines a consensus state with an additional height\nfield."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ConsensusState queries a consensus state associated with a client state at\na given height.",
                "operationId": "IbcCoreClientV1ConsensusState",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "client identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revision_number",
                        "in": "path",
                        "description": "consensus state revision number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "revision_height",
                        "in": "path",
                        "description": "consensus state revision height",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "latest_height",
                        "in": "query",
                        "description": "latest_height overrrides the height field and queries the latest stored\nConsensusState",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryConsensusStateResponse is the response type for the Query/ConsensusState\nRPC method",
                                    "type": "object",
                                    "properties": {
                                        "consensus_state": {
                                            "title": "consensus state associated with the client identifier at the given height",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/upgraded_client_states": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "UpgradedClientState queries an Upgraded IBC light client.",
                "operationId": "IbcCoreClientV1UpgradedClientState",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "upgraded_client_state": {
                                            "title": "client state associated with the request identifier",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        }
                                    },
                                    "description": "QueryUpgradedClientStateResponse is the response type for the\nQuery/UpgradedClientState RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/client/v1/upgraded_consensus_states": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "UpgradedConsensusState queries an Upgraded IBC consensus state.",
                "operationId": "IbcCoreClientV1UpgradedConsensusState",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "upgraded_consensus_state": {
                                            "title": "Consensus state associated with the request identifier",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        }
                                    },
                                    "description": "QueryUpgradedConsensusStateResponse is the response type for the\nQuery/UpgradedConsensusState RPC method."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/connection/v1/client_connections/{client_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ClientConnections queries the connection paths associated with a client\nstate.",
                "operationId": "IbcCoreConnectionV1ClientConnections",
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "path",
                        "description": "client identifier associated with a connection",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryClientConnectionsResponse is the response type for the\nQuery/ClientConnections RPC method",
                                    "type": "object",
                                    "properties": {
                                        "connection_paths": {
                                            "type": "array",
                                            "description": "slice of all the connection paths associated with a client.",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was generated",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/connection/v1/connections": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Connections queries all the IBC connections of a chain.",
                "operationId": "IbcCoreConnectionV1Connections",
                "parameters": [
                    {
                        "name": "pagination.key",
                        "in": "query",
                        "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "pagination.offset",
                        "in": "query",
                        "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.limit",
                        "in": "query",
                        "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "pagination.count_total",
                        "in": "query",
                        "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "connections": {
                                            "type": "array",
                                            "description": "list of stored connections of the chain.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "description": "connection identifier."
                                                    },
                                                    "client_id": {
                                                        "type": "string",
                                                        "description": "client associated with this connection."
                                                    },
                                                    "versions": {
                                                        "title": "IBC version which can be utilised to determine encodings or protocols for\nchannels or packets utilising this connection",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "identifier": {
                                                                    "title": "unique version identifier",
                                                                    "type": "string"
                                                                },
                                                                "features": {
                                                                    "title": "list of features compatible with the specified identifier",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "description": "Version defines the versioning scheme used to negotiate the IBC verison in\nthe connection handshake."
                                                        }
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "description": "current state of the connection end.",
                                                        "default": "STATE_UNINITIALIZED_UNSPECIFIED",
                                                        "enum": [
                                                            "STATE_UNINITIALIZED_UNSPECIFIED",
                                                            "STATE_INIT",
                                                            "STATE_TRYOPEN",
                                                            "STATE_OPEN"
                                                        ]
                                                    },
                                                    "counterparty": {
                                                        "type": "object",
                                                        "properties": {
                                                            "client_id": {
                                                                "type": "string",
                                                                "description": "identifies the client on the counterparty chain associated with a given\nconnection."
                                                            },
                                                            "connection_id": {
                                                                "type": "string",
                                                                "description": "identifies the connection end on the counterparty chain associated with a\ngiven connection."
                                                            },
                                                            "prefix": {
                                                                "title": "MerklePrefix is merkle path prefixed to the key.\nThe constructed key from the Path and the key will be append(Path.KeyPath,\nappend(Path.KeyPrefix, key...))",
                                                                "type": "object",
                                                                "properties": {
                                                                    "key_prefix": {
                                                                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    }
                                                                },
                                                                "description": "commitment merkle prefix of the counterparty chain."
                                                            }
                                                        },
                                                        "description": "counterparty chain associated with this connection."
                                                    },
                                                    "delay_period": {
                                                        "type": "string",
                                                        "description": "delay period associated with this connection.",
                                                        "format": "uint64"
                                                    }
                                                },
                                                "description": "IdentifiedConnection defines a connection with additional connection\nidentifier field."
                                            }
                                        },
                                        "pagination": {
                                            "title": "pagination response",
                                            "type": "object",
                                            "properties": {
                                                "next_key": {
                                                    "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently",
                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                    "type": "string",
                                                    "format": "byte"
                                                },
                                                "total": {
                                                    "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
                                        },
                                        "height": {
                                            "title": "query block height",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    },
                                    "description": "QueryConnectionsResponse is the response type for the Query/Connections RPC\nmethod."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/connection/v1/connections/{connection_id}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "Connection queries an IBC connection end.",
                "operationId": "IbcCoreConnectionV1Connection",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "description": "connection unique identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "connection": {
                                            "title": "connection associated with the request identifier",
                                            "type": "object",
                                            "properties": {
                                                "client_id": {
                                                    "type": "string",
                                                    "description": "client associated with this connection."
                                                },
                                                "versions": {
                                                    "type": "array",
                                                    "description": "IBC version which can be utilised to determine encodings or protocols for\nchannels or packets utilising this connection.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "identifier": {
                                                                "title": "unique version identifier",
                                                                "type": "string"
                                                            },
                                                            "features": {
                                                                "title": "list of features compatible with the specified identifier",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "description": "Version defines the versioning scheme used to negotiate the IBC verison in\nthe connection handshake."
                                                    }
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "description": "current state of the connection end.",
                                                    "default": "STATE_UNINITIALIZED_UNSPECIFIED",
                                                    "enum": [
                                                        "STATE_UNINITIALIZED_UNSPECIFIED",
                                                        "STATE_INIT",
                                                        "STATE_TRYOPEN",
                                                        "STATE_OPEN"
                                                    ]
                                                },
                                                "counterparty": {
                                                    "type": "object",
                                                    "properties": {
                                                        "client_id": {
                                                            "type": "string",
                                                            "description": "identifies the client on the counterparty chain associated with a given\nconnection."
                                                        },
                                                        "connection_id": {
                                                            "type": "string",
                                                            "description": "identifies the connection end on the counterparty chain associated with a\ngiven connection."
                                                        },
                                                        "prefix": {
                                                            "title": "MerklePrefix is merkle path prefixed to the key.\nThe constructed key from the Path and the key will be append(Path.KeyPath,\nappend(Path.KeyPrefix, key...))",
                                                            "type": "object",
                                                            "properties": {
                                                                "key_prefix": {
                                                                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                                                    "type": "string",
                                                                    "format": "byte"
                                                                }
                                                            },
                                                            "description": "commitment merkle prefix of the counterparty chain."
                                                        }
                                                    },
                                                    "description": "counterparty chain associated with this connection."
                                                },
                                                "delay_period": {
                                                    "type": "string",
                                                    "description": "delay period that must pass before a consensus state can be used for\npacket-verification NOTE: delay period logic is only implemented by some\nclients.",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "ConnectionEnd defines a stateful object on a chain connected to another\nseparate one.\nNOTE: there must only be 2 defined ConnectionEnds to establish\na connection between two chains."
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    },
                                    "description": "QueryConnectionResponse is the response type for the Query/Connection RPC\nmethod. Besides the connection end, it includes a proof and the height from\nwhich the proof was retrieved."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/connection/v1/connections/{connection_id}/client_state": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ConnectionClientState queries the client state associated with the\nconnection.",
                "operationId": "IbcCoreConnectionV1ConnectionClientState",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "description": "connection identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryConnectionClientStateResponse is the response type for the\nQuery/ConnectionClientState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "identified_client_state": {
                                            "title": "client state associated with the channel",
                                            "type": "object",
                                            "properties": {
                                                "client_id": {
                                                    "title": "client identifier",
                                                    "type": "string"
                                                },
                                                "client_state": {
                                                    "title": "client state",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object"
                                                    },
                                                    "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                                }
                                            },
                                            "description": "IdentifiedClientState defines a client state with an additional client\nidentifier field."
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}": {
            "get": {
                "tags": [
                    "Legacy LCD"
                ],
                "summary": "ConnectionConsensusState queries the consensus state associated with the\nconnection.",
                "operationId": "IbcCoreConnectionV1ConnectionConsensusState",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "description": "connection identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revision_number",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    },
                    {
                        "name": "revision_height",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uint64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "QueryConnectionConsensusStateResponse is the response type for the\nQuery/ConnectionConsensusState RPC method",
                                    "type": "object",
                                    "properties": {
                                        "consensus_state": {
                                            "title": "consensus state associated with the channel",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object"
                                            },
                                            "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                        },
                                        "client_id": {
                                            "title": "client ID associated with the consensus state",
                                            "type": "string"
                                        },
                                        "proof": {
                                            "title": "merkle proof of existence",
                                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                                            "type": "string",
                                            "format": "byte"
                                        },
                                        "proof_height": {
                                            "title": "height at which the proof was retrieved",
                                            "type": "object",
                                            "properties": {
                                                "revision_number": {
                                                    "title": "the revision that the client is currently on",
                                                    "type": "string",
                                                    "format": "uint64"
                                                },
                                                "revision_height": {
                                                    "title": "the height within the given revision",
                                                    "type": "string",
                                                    "format": "uint64"
                                                }
                                            },
                                            "description": "Normally the RevisionHeight is incremented at each height while keeping\nRevisionNumber the same. However some consensus algorithms may choose to\nreset the height in certain conditions e.g. hard forks, state-machine\nbreaking changes In these cases, the RevisionNumber is incremented so that\nheight continues to be monitonically increasing even as the RevisionHeight\ngets reset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object"
                                                },
                                                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {},
    "tags": []
}