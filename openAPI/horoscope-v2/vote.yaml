openapi: 3.0.3
info:
  title: Horoscope v2 graphql
  version: 1.0.0
servers:
  - url: https://indexer-v2.dev.aurascan.io
    description: Server for testnet network. Support chains of auratestnet, serenity, euphoria, xstaxy, nois and sei
  - url: https://horoscope.aura.network
    description: Server for main network. Only support chain of xstaxy
  - url: https://indexer-v2.staging.aurascan.io
    description: Server for testnet network. Support chains of euphoria and xstaxy
tags:
  - name: vote
paths:
  /api/v2/graphql:
    post:
      tags:
        - vote
      summary: Query vote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vote'
            examples:
              xstaxy:
                summary: Query on Xstaxy chain
                value:
                  operationName: queryVote
                  query: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { xstaxy { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
                  variables:
                    limit: 5
                    order: desc
                    proposalId: 245
                    voteOption: null
                    offset: 0
              auratestnet:
                summary: Query on Aura Testnet chain
                value:
                  operationName: queryVote
                  query: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { auratestnet { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
                  variables:
                    limit: 5
                    order: desc
                    proposalId: 245
                    voteOption: null
                    offset: 0
              serenity:
                summary: Query on Serenity chain
                value:
                  operationName: queryVote
                  query: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { serenity { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
                  variables:
                    limit: 5
                    order: desc
                    proposalId: 245
                    voteOption: null
                    offset: 0
              euphoria:
                summary: Query on Euphoria chain
                value:
                  operationName: queryVote
                  query: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { euphoria { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
                  variables:
                    limit: 5
                    order: desc
                    proposalId: 245
                    voteOption: null
                    offset: 0
              nois:
                summary: Query on Nois chain
                value:
                  operationName: queryVote
                  query: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { nois { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
                  variables:
                    limit: 5
                    order: desc
                    proposalId: 245
                    voteOption: null
                    offset: 0
              sei:
                summary: Query on Sei chain
                value:
                  operationName: queryVote
                  query: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { sei { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
                  variables:
                    limit: 5
                    order: desc
                    proposalId: 245
                    voteOption: null
                    offset: 0
      responses:
        '200':
          description: Successful operation
components:
  schemas:
    vote:
      type: object
      properties:
        operationName:
          type: string
          example: queryVote
          description: query name
        query:
          type: string
          example: 'query queryVote($limit: Int = 10, $offset: Int = 0, $order: order_by = desc, $proposalId: Int = null, $voteOption: String = null) { serenity { vote(limit: $limit, offset: $offset, where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}, order_by: {height: $order}) { height proposal_id txhash vote_option voter transaction { timestamp } } vote_aggregate(where: {proposal_id: {_eq: $proposalId}, vote_option: {_eq: $voteOption}}) { aggregate { count } } } }'
          description: Graphql query
        variables:
          type: object
          description: Variable in query
          example:
            limit: 5
            order: desc
            proposalId: 245
            voteOption: null
            offset: 0
